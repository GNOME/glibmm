giodep = dependency('gio-2.0')
giounixdep = dependency('gio-unix-2.0')

giomm_modules = [
  'actiongroup',
  'dbusproxy',
  'memoryinputstream',
  'socketaddress',
  'action',
  'dbusserver',
  'memoryoutputstream',
  'socketclient',
  'actionmap',
  'dbussubtreevtable',
  'menuattributeiter',
  'socketconnectable',
  'appinfo',
  'dbusutils',
  'menu',
  'socketconnection',
  'applaunchcontext',
  'dbuswatchname',
  'menuitem',
  'socketcontrolmessage',
  'applicationcommandline',
  'desktopappinfo',
  'menulinkiter',
  'socket',
  'application',
  'drive',
  'menumodel',
  'socketlistener',
  'asyncinitable',
  'emblemedicon',
  'mount',
  'socketservice',
  'asyncresult',
  'emblem',
  'mountoperation',
  'srvtarget',
  'bufferedinputstream',
  'enums',
  'networkaddress',
  'tcpconnection',
  'bufferedoutputstream',
  'error',
  'networkmonitor',
  'tcpwrapperconnection',
  'cancellable',
  'fileattributeinfo',
  'networkservice',
  'themedicon',
  'charsetconverter',
  'fileattributeinfolist',
  'notification',
  'threadedsocketservice',
  'converter',
  'filedescriptorbased',
  'outputstream',
  'tlscertificate',
  'converterinputstream',
  'fileenumerator',
  'permission',
  'tlsclientconnection',
  'converteroutputstream',
  'file',
  'pollableinputstream',
  'tlsconnection',
  'credentials',
  'fileicon',
  'pollableoutputstream',
  'tlsdatabase',
  'datainputstream',
  'fileinfo',
  'propertyaction',
  'tlsfiledatabase',
  'dataoutputstream',
  'fileinputstream',
  'proxyaddress',
  'tlsinteraction',
  'dbusactiongroup',
  'fileiostream',
  'proxy',
  'tlspassword',
  'dbusaddress',
  'filemonitor',
  'proxyresolver',
  'tlsserverconnection',
  'dbusauthobserver',
  'filenamecompleter',
  'remoteactiongroup',
  'unixconnection',
  'dbusconnection',
  'fileoutputstream',
  'resolver',
  'unixcredentialsmessage',
  'dbuserror',
  'filterinputstream',
  'resource',
  'unixfdlist',
  'dbuserrorutils',
  'filteroutputstream',
  'seekable',
  'unixfdmessage',
  'dbusinterface',
  'icon',
  'settings',
  'unixinputstream',
  'dbusinterfaceskeleton',
  'inetaddress',
  'settingsschema',
  'unixmount',
  'dbusinterfacevtable',
  'inetsocketaddress',
  'settingsschemakey',
  'unixoutputstream',
  'dbusintrospection',
  'initable',
  'settingsschemasource',
  'unixsocketaddress',
  'dbusmenumodel',
  'inputstream',
  'simpleactiongroup',
  'volume',
  'dbusmessage',
  'iostream',
  'simpleaction',
  'volumemonitor',
  'dbusmethodinvocation',
  'listmodel',
  'simpleiostream',
  'zlibcompressor',
  'dbusobject',
  'liststore',
  'simplepermission',
  'zlibdecompressor',
  'dbusownname',
  'loadableicon',
  'socketaddressenumerator']

giomm_handwritten_sources = [
  'contenttype.cc',
  'init.cc',
  'slot_async.cc',
  'socketsource.cc']


giomm_targets = []

#TODO ugly hack, has to be implemented in other way in the future
private_dir = join_paths(meson.build_root(), 'gio', 'giomm', 'private')
giomm_targets += custom_target('giomm_generate_priv_dir',
  output : 'private',
  command : [python, '-c',
            'import os\nos.mkdir("' + private_dir + '")'])

giomm_targets += custom_target('giomm_generate_wrap_init',
  output : 'wrap_init.cc',
  command : [python,
             wrap_output,
	     perl,
	     join_paths(meson.current_build_dir(), 'wrap_init.cc'),
             '--',
             join_paths(meson.build_root(), 'tools', 'generate_wrap_init.pl'),
             '--namespace=Gio', '--parent_dir=giomm'])

# TODO: foreach below could be replaced with simpler code (see glibmm's meson file)
foreach giomm_module : giomm_modules
  giomm_targets += custom_target('giomm_generate_cc_' + giomm_module,
    output : [giomm_module + '.cc', giomm_module + '.h'],
    input : join_paths('..', 'src', giomm_module + '.hg'),
    command : [perl,
               '-I../tools/pm', '--', join_paths(meson.build_root(), 'tools', 'gmmproc'),
               '-I', join_paths(meson.source_root(), 'tools', 'm4'),
               '--defs', join_paths(meson.current_source_dir(), '..', 'src'),
               giomm_module,
               join_paths(meson.current_source_dir(), '..', 'src'),
               join_paths('gio', 'giomm')])
endforeach

giomm_includes = include_directories('..')

giomm_library = shared_library(
  'giomm',
  giomm_targets, giomm_handwritten_sources,
  include_directories : giomm_includes,
  dependencies : [glibdep, sigcppdep, gobjectdep, gmoduledep, giounixdep, giodep, glibmm_dep])

