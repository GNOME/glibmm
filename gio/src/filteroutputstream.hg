/* Copyright (C) 2008 The gtkmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <giomm/outputstream.h>
#include <glibmm/object.h>

_DEFS(giomm,gio)
_PINCLUDE(giomm/private/outputstream_p.h)

namespace Gio
{

/** Filter Output Stream.
 *
 * This is a base class for output stream implementations that perform some kind of filtering operation on a base stream.
 * Typical examples of filtering operations are character set conversion, compression and byte order flipping.
 *
 * @ingroup Streams
 *
 * @newin{2,16}
 */
class FilterOutputStream : public Gio::OutputStream
{
  _CLASS_GOBJECT(FilterOutputStream, GFilterOutputStream, G_FILTER_OUTPUT_STREAM, Gio::OutputStream, GOutputStream)

protected:
  // This needs to be hand-coded because there is no public GFilterOutputStream constructor.
  explicit FilterOutputStream(const Glib::RefPtr<OutputStream>& base_stream);

public:
  _WRAP_METHOD(Glib::RefPtr<OutputStream> get_base_stream(),
               g_filter_output_stream_get_base_stream,
               refreturn)

  _WRAP_METHOD(Glib::RefPtr<const OutputStream> get_base_stream() const,
               g_filter_output_stream_get_base_stream,
               refreturn, constversion)

  _WRAP_METHOD(bool get_close_base_stream() const, g_filter_output_stream_get_close_base_stream)
  _WRAP_METHOD(void set_close_base_stream(bool close_base = true), g_filter_output_stream_set_close_base_stream)

  _WRAP_PROPERTY("base-stream", Glib::RefPtr<OutputStream>)
  _WRAP_PROPERTY("close-base-stream", bool)
};

} // namespace Gio
