/* Copyright (C) 2007 The giomm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <glibmm/interface.h>
#include <giomm/socketaddressenumerator.h>

_DEFS(giomm,gio)
_PINCLUDE(glibmm/private/interface_p.h)

#ifndef DOXYGEN_SHOULD_SKIP_THIS
typedef struct _GSocketConnectableIface GSocketConnectableIface;
#endif /* DOXYGEN_SHOULD_SKIP_THIS */

namespace Gio
{

/** Interface for potential socket endpoints
 *
 * @newin{2,24}
 * @ingroup NetworkIO
 */
class SocketConnectable : public Glib::Interface
{
  _CLASS_INTERFACE(SocketConnectable, GSocketConnectable, G_SOCKET_CONNECTABLE, GSocketConnectableIface)

public:
  _WRAP_METHOD (Glib::RefPtr<SocketAddressEnumerator> enumerate(), g_socket_connectable_enumerate)
  _WRAP_METHOD (Glib::RefPtr<const SocketAddressEnumerator> enumerate() const, g_socket_connectable_enumerate, constversion)

  _WRAP_METHOD(Glib::RefPtr<SocketAddressEnumerator> proxy_enumerate(), g_socket_connectable_proxy_enumerate)
  _WRAP_METHOD(Glib::RefPtr<const SocketAddressEnumerator> proxy_enumerate() const, g_socket_connectable_proxy_enumerate, constversion)

  _WRAP_METHOD(Glib::ustring to_string() const, g_socket_connectable_to_string)

  //TODO: Wrap vfuncs?
};

} // namespace Gio
