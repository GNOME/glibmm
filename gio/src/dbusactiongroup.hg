/* Copyright (C) 2012 The giomm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <glibmm/object.h>
#include <giomm/actiongroup.h>
#include <giomm/remoteactiongroup.h>

_DEFS(giomm,gio)
_PINCLUDE(glibmm/private/object_p.h)

namespace Gio
{

namespace DBus
{

class Connection;

_GMMPROC_EXTRA_NAMESPACE(DBus)

/** ActionGroup - A D-Bus Gio::ActionGroup implementation.
 * ActionGroup is an implementation of the Gio::ActionGroup interface that can
 * be used as a proxy for an action group that is exported over D-Bus with
 * Gio::DBus::Connection::export_action_group().
 * @newin{2,32}
 */
class ActionGroup
: public Glib::Object, public ::Gio::ActionGroup, public RemoteActionGroup
{
  _CLASS_GOBJECT(ActionGroup, GDBusActionGroup, G_DBUS_ACTION_GROUP, Glib::Object, GObject)
  _IMPLEMENTS_INTERFACE(::Gio::ActionGroup)
  _IMPLEMENTS_INTERFACE(RemoteActionGroup)

protected:
  _CTOR_DEFAULT

public:
#m4 _CONVERSION(`GDBusActionGroup*',`Glib::RefPtr<ActionGroup>',`Glib::wrap($3)')
  _WRAP_METHOD(static Glib::RefPtr<ActionGroup> get(const Glib::RefPtr<Connection>& connection, const Glib::ustring& bus_name, const Glib::ustring& object_path), g_dbus_action_group_get)
};

} // namespace DBus

} // namespace Gio
