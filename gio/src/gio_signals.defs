;; From GAsyncResult

;; From GAction

(define-property enabled
  (of-object "GAction")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "TRUE")
)

(define-property name
  (of-object "GAction")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "")
)

(define-property parameter-type
  (of-object "GAction")
  (prop-type "GParamBoxed")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property state
  (of-object "GAction")
  (prop-type "GParamVariant")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property state-type
  (of-object "GAction")
  (prop-type "GParamBoxed")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

;; From GActionGroup

(define-signal action-added
  (of-object "GActionGroup")
  (return-type "void")
  (flags "Run Last")
  (detailed #t)
  (parameters
    '("const-gchar*" "p0")
  )
)

(define-signal action-removed
  (of-object "GActionGroup")
  (return-type "void")
  (flags "Run Last")
  (detailed #t)
  (parameters
    '("const-gchar*" "p0")
  )
)

(define-signal action-enabled-changed
  (of-object "GActionGroup")
  (return-type "void")
  (flags "Run Last")
  (detailed #t)
  (parameters
    '("const-gchar*" "p0")
    '("gboolean" "p1")
  )
)

(define-signal action-state-changed
  (of-object "GActionGroup")
  (return-type "void")
  (flags "Run Last, Must Collect")
  (detailed #t)
  (parameters
    '("const-gchar*" "p0")
    '("GVariant*" "p1")
  )
)

;; From GApplication

(define-signal startup
  (of-object "GApplication")
  (return-type "void")
  (flags "Run First")
)

(define-signal shutdown
  (of-object "GApplication")
  (return-type "void")
  (flags "Run Last")
)

(define-signal activate
  (of-object "GApplication")
  (return-type "void")
  (flags "Run Last")
)

(define-signal open
  (of-object "GApplication")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("gpointer" "p0")
    '("gint" "p1")
    '("const-gchar*" "p2")
  )
)

(define-signal command-line
  (of-object "GApplication")
  (return-type "gint")
  (flags "Run Last")
  (parameters
    '("GApplicationCommandLine*" "p0")
  )
)

(define-signal handle-local-options
  (of-object "GApplication")
  (return-type "gint")
  (flags "Run Last")
  (parameters
    '("GVariantDict*" "p0")
  )
)

(define-signal name-lost
  (of-object "GApplication")
  (return-type "gboolean")
  (flags "Run Last")
)

(define-property application-id
  (of-object "GApplication")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "")
)

(define-property version
  (of-object "GApplication")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "")
)

(define-property flags
  (of-object "GApplication")
  (prop-type "GParamFlags")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "G_APPLICATION_FLAGS_NONE")
)

(define-property resource-base-path
  (of-object "GApplication")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "")
)

(define-property is-registered
  (of-object "GApplication")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "FALSE")
)

(define-property is-remote
  (of-object "GApplication")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "FALSE")
)

(define-property inactivity-timeout
  (of-object "GApplication")
  (prop-type "GParamUInt")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "0")
)

(define-property action-group
  (of-object "GApplication")
  (prop-type "GParamObject")
  (docs "")
  (readable #f)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
)

(define-property is-busy
  (of-object "GApplication")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "FALSE")
)

;; From GAppInfoMonitor

(define-signal changed
  (of-object "GAppInfoMonitor")
  (return-type "void")
  (flags "Run First")
)

;; From GCancellable

(define-signal cancelled
  (of-object "GCancellable")
  (return-type "void")
  (flags "Run Last")
)

;; From GBufferedInputStream

(define-property buffer-size
  (of-object "GBufferedInputStream")
  (prop-type "GParamUInt")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "4096")
)

;; From GBufferedOutputStream

(define-property buffer-size
  (of-object "GBufferedOutputStream")
  (prop-type "GParamUInt")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "4096")
)

(define-property auto-grow
  (of-object "GBufferedOutputStream")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "FALSE")
)

;; From GBytesIcon

(define-property bytes
  (of-object "GBytesIcon")
  (prop-type "GParamBoxed")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

;; From GCharsetConverter

(define-property from-charset
  (of-object "GCharsetConverter")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property to-charset
  (of-object "GCharsetConverter")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property use-fallback
  (of-object "GCharsetConverter")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "FALSE")
)

;; From GConverterInputStream

(define-property converter
  (of-object "GConverterInputStream")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

;; From GConverterOutputStream

(define-property converter
  (of-object "GConverterOutputStream")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

;; From GDataInputStream

(define-property byte-order
  (of-object "GDataInputStream")
  (prop-type "GParamEnum")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "G_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN")
)

(define-property newline-type
  (of-object "GDataInputStream")
  (prop-type "GParamEnum")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "G_DATA_STREAM_NEWLINE_TYPE_LF")
)

;; From GDataOutputStream

(define-property byte-order
  (of-object "GDataOutputStream")
  (prop-type "GParamEnum")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "G_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN")
)

;; From GDrive

(define-signal changed
  (of-object "GDrive")
  (return-type "void")
  (flags "Run Last")
)

(define-signal disconnected
  (of-object "GDrive")
  (return-type "void")
  (flags "Run Last")
)

(define-signal eject-button
  (of-object "GDrive")
  (return-type "void")
  (flags "Run Last")
)

(define-signal stop-button
  (of-object "GDrive")
  (return-type "void")
  (flags "Run Last")
)

;; From GFile

;; From GFileEnumerator

(define-property container
  (of-object "GFileEnumerator")
  (prop-type "GParamObject")
  (docs "")
  (readable #f)
  (writable #t)
  (construct-only #t)
)

;; From GFileInfo

;; From GFileIcon

(define-property file
  (of-object "GFileIcon")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

;; From GFileMonitor

(define-signal changed
  (of-object "GFileMonitor")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("GFile*" "p0")
    '("GFile*" "p1")
    '("GFileMonitorEvent" "p2")
  )
)

(define-property rate-limit
  (of-object "GFileMonitor")
  (prop-type "GParamInt")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "800")
)

(define-property cancelled
  (of-object "GFileMonitor")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "FALSE")
)

;; From GFilenameCompleter

(define-signal got-completion-data
  (of-object "GFilenameCompleter")
  (return-type "void")
  (flags "Run Last")
)

;; From GFileInputStream

;; From GFileOutputStream

;; From GFilterInputStream

(define-property base-stream
  (of-object "GFilterInputStream")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property close-base-stream
  (of-object "GFilterInputStream")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "TRUE")
)

;; From GFilterOutputStream

(define-property base-stream
  (of-object "GFilterOutputStream")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property close-base-stream
  (of-object "GFilterOutputStream")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "TRUE")
)

;; From GUnixCredentialsMessage

(define-property credentials
  (of-object "GUnixCredentialsMessage")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

;; From GUnixFDMessage

(define-property fd-list
  (of-object "GUnixFDMessage")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

;; From GUnixInputStream

(define-property fd
  (of-object "GUnixInputStream")
  (prop-type "GParamInt")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "-1")
)

(define-property close-fd
  (of-object "GUnixInputStream")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "TRUE")
)

;; From GUnixOutputStream

(define-property fd
  (of-object "GUnixOutputStream")
  (prop-type "GParamInt")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "-1")
)

(define-property close-fd
  (of-object "GUnixOutputStream")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "TRUE")
)

;; From GUnixSocketAddress

(define-property path
  (of-object "GUnixSocketAddress")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property path-as-array
  (of-object "GUnixSocketAddress")
  (prop-type "GParamBoxed")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property abstract
  (of-object "GUnixSocketAddress")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "FALSE")
)

(define-property address-type
  (of-object "GUnixSocketAddress")
  (prop-type "GParamEnum")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "G_UNIX_SOCKET_ADDRESS_PATH")
)

;; From GInputStream

;; From GListModel

(define-signal items-changed
  (of-object "GListModel")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("guint" "p0")
    '("guint" "p1")
    '("guint" "p2")
  )
)

;; From GListStore

(define-property item-type
  (of-object "GListStore")
  (prop-type "GParamGType")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property n-items
  (of-object "GListStore")
  (prop-type "GParamUInt")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "0")
)

;; From GLoadableIcon

;; From GMemoryInputStream

;; From GMemoryOutputStream

(define-property data
  (of-object "GMemoryOutputStream")
  (prop-type "GParamPointer")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property size
  (of-object "GMemoryOutputStream")
  (prop-type "GParamULong")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "0")
)

(define-property data-size
  (of-object "GMemoryOutputStream")
  (prop-type "GParamULong")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "0")
)

(define-property realloc-function
  (of-object "GMemoryOutputStream")
  (prop-type "GParamPointer")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property destroy-function
  (of-object "GMemoryOutputStream")
  (prop-type "GParamPointer")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

;; From GMenu

;; From GMenuModel

(define-signal items-changed
  (of-object "GMenuModel")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("gint" "p0")
    '("gint" "p1")
    '("gint" "p2")
  )
)

;; From GMount

(define-signal changed
  (of-object "GMount")
  (return-type "void")
  (flags "Run Last")
)

(define-signal unmounted
  (of-object "GMount")
  (return-type "void")
  (flags "Run Last")
)

(define-signal pre-unmount
  (of-object "GMount")
  (return-type "void")
  (flags "Run Last")
)

;; From GMountOperation

(define-signal ask-password
  (of-object "GMountOperation")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("const-gchar*" "p0")
    '("const-gchar*" "p1")
    '("const-gchar*" "p2")
    '("GAskPasswordFlags" "p3")
  )
)

(define-signal ask-question
  (of-object "GMountOperation")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("const-gchar*" "p0")
    '("const-gchar**" "p1")
  )
)

(define-signal reply
  (of-object "GMountOperation")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("GMountOperationResult" "p0")
  )
)

(define-signal aborted
  (of-object "GMountOperation")
  (return-type "void")
  (flags "Run Last")
)

(define-signal show-processes
  (of-object "GMountOperation")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("const-gchar*" "p0")
    '("GArray*" "p1")
    '("GStrv*" "p2")
  )
)

(define-signal show-unmount-progress
  (of-object "GMountOperation")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("const-gchar*" "p0")
    '("gint64" "p1")
    '("gint64" "p2")
  )
)

(define-property username
  (of-object "GMountOperation")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "")
)

(define-property password
  (of-object "GMountOperation")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "")
)

(define-property anonymous
  (of-object "GMountOperation")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "FALSE")
)

(define-property domain
  (of-object "GMountOperation")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "")
)

(define-property password-save
  (of-object "GMountOperation")
  (prop-type "GParamEnum")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "G_PASSWORD_SAVE_NEVER")
)

(define-property choice
  (of-object "GMountOperation")
  (prop-type "GParamInt")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "0")
)

(define-property is-tcrypt-hidden-volume
  (of-object "GMountOperation")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "FALSE")
)

(define-property is-tcrypt-system-volume
  (of-object "GMountOperation")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "FALSE")
)

(define-property pim
  (of-object "GMountOperation")
  (prop-type "GParamUInt")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "0")
)

;; From GNotification

;; From GPermission

(define-property allowed
  (of-object "GPermission")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "FALSE")
)

(define-property can-acquire
  (of-object "GPermission")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "FALSE")
)

(define-property can-release
  (of-object "GPermission")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "FALSE")
)

;; From GPropertyAction

(define-property name
  (of-object "GPropertyAction")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property parameter-type
  (of-object "GPropertyAction")
  (prop-type "GParamBoxed")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property enabled
  (of-object "GPropertyAction")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "TRUE")
)

(define-property state-type
  (of-object "GPropertyAction")
  (prop-type "GParamBoxed")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property state
  (of-object "GPropertyAction")
  (prop-type "GParamVariant")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property object
  (of-object "GPropertyAction")
  (prop-type "GParamObject")
  (docs "")
  (readable #f)
  (writable #t)
  (construct-only #t)
)

(define-property property-name
  (of-object "GPropertyAction")
  (prop-type "GParamString")
  (docs "")
  (readable #f)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property invert-boolean
  (of-object "GPropertyAction")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "FALSE")
)

;; From GProxy

;; From GProxyAddress

(define-property protocol
  (of-object "GProxyAddress")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property destination-protocol
  (of-object "GProxyAddress")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property destination-hostname
  (of-object "GProxyAddress")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property destination-port
  (of-object "GProxyAddress")
  (prop-type "GParamUInt")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "0")
)

(define-property username
  (of-object "GProxyAddress")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property password
  (of-object "GProxyAddress")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property uri
  (of-object "GProxyAddress")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

;; From GProxyAddressEnumerator

(define-property uri
  (of-object "GProxyAddressEnumerator")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property default-port
  (of-object "GProxyAddressEnumerator")
  (prop-type "GParamUInt")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "0")
)

(define-property connectable
  (of-object "GProxyAddressEnumerator")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property proxy-resolver
  (of-object "GProxyAddressEnumerator")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GProxyResolver

;; From GSeekable

;; From GSettings

(define-signal changed
  (of-object "GSettings")
  (return-type "void")
  (flags "Run Last")
  (detailed #t)
  (parameters
    '("const-gchar*" "p0")
  )
)

(define-signal change-event
  (of-object "GSettings")
  (return-type "gboolean")
  (flags "Run Last")
  (parameters
    '("gpointer" "p0")
    '("gint" "p1")
  )
)

(define-signal writable-changed
  (of-object "GSettings")
  (return-type "void")
  (flags "Run Last")
  (detailed #t)
  (parameters
    '("const-gchar*" "p0")
  )
)

(define-signal writable-change-event
  (of-object "GSettings")
  (return-type "gboolean")
  (flags "Run Last")
  (parameters
    '("GQuark" "p0")
  )
)

(define-property settings-schema
  (of-object "GSettings")
  (prop-type "GParamBoxed")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property schema
  (of-object "GSettings")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (deprecated #t)
  (default-value "")
)

(define-property schema-id
  (of-object "GSettings")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property backend
  (of-object "GSettings")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property path
  (of-object "GSettings")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property has-unapplied
  (of-object "GSettings")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "FALSE")
)

(define-property delay-apply
  (of-object "GSettings")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "FALSE")
)

;; From GSettingsBackend

;; From GSimpleAsyncResult

;; From GSimpleAction

(define-signal activate
  (of-object "GSimpleAction")
  (return-type "void")
  (flags "Run Last, Must Collect")
  (parameters
    '("GVariant*" "p0")
  )
)

(define-signal change-state
  (of-object "GSimpleAction")
  (return-type "void")
  (flags "Run Last, Must Collect")
  (parameters
    '("GVariant*" "p0")
  )
)

(define-property name
  (of-object "GSimpleAction")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property parameter-type
  (of-object "GSimpleAction")
  (prop-type "GParamBoxed")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property enabled
  (of-object "GSimpleAction")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "TRUE")
)

(define-property state-type
  (of-object "GSimpleAction")
  (prop-type "GParamBoxed")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property state
  (of-object "GSimpleAction")
  (prop-type "GParamVariant")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GSimpleIOStream

(define-property input-stream
  (of-object "GSimpleIOStream")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property output-stream
  (of-object "GSimpleIOStream")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

;; From GSubprocess

(define-property flags
  (of-object "GSubprocess")
  (prop-type "GParamFlags")
  (docs "")
  (readable #f)
  (writable #t)
  (construct-only #t)
  (default-value "G_SUBPROCESS_FLAGS_NONE")
)

(define-property argv
  (of-object "GSubprocess")
  (prop-type "GParamBoxed")
  (docs "")
  (readable #f)
  (writable #t)
  (construct-only #t)
)

;; From GSubprocessLauncher

(define-property flags
  (of-object "GSubprocessLauncher")
  (prop-type "GParamFlags")
  (docs "")
  (readable #f)
  (writable #t)
  (construct-only #t)
  (default-value "G_SUBPROCESS_FLAGS_NONE")
)

;; From GThemedIcon

(define-property name
  (of-object "GThemedIcon")
  (prop-type "GParamString")
  (docs "")
  (readable #f)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property names
  (of-object "GThemedIcon")
  (prop-type "GParamBoxed")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property use-default-fallbacks
  (of-object "GThemedIcon")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "FALSE")
)

;; From GVolume

(define-signal changed
  (of-object "GVolume")
  (return-type "void")
  (flags "Run Last")
)

(define-signal removed
  (of-object "GVolume")
  (return-type "void")
  (flags "Run Last")
)

;; From GVolumeMonitor

(define-signal volume-added
  (of-object "GVolumeMonitor")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("GVolume*" "p0")
  )
)

(define-signal volume-removed
  (of-object "GVolumeMonitor")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("GVolume*" "p0")
  )
)

(define-signal volume-changed
  (of-object "GVolumeMonitor")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("GVolume*" "p0")
  )
)

(define-signal mount-added
  (of-object "GVolumeMonitor")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("GMount*" "p0")
  )
)

(define-signal mount-removed
  (of-object "GVolumeMonitor")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("GMount*" "p0")
  )
)

(define-signal mount-pre-unmount
  (of-object "GVolumeMonitor")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("GMount*" "p0")
  )
)

(define-signal mount-changed
  (of-object "GVolumeMonitor")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("GMount*" "p0")
  )
)

(define-signal drive-connected
  (of-object "GVolumeMonitor")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("GDrive*" "p0")
  )
)

(define-signal drive-disconnected
  (of-object "GVolumeMonitor")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("GDrive*" "p0")
  )
)

(define-signal drive-changed
  (of-object "GVolumeMonitor")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("GDrive*" "p0")
  )
)

(define-signal drive-eject-button
  (of-object "GVolumeMonitor")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("GDrive*" "p0")
  )
)

(define-signal drive-stop-button
  (of-object "GVolumeMonitor")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("GDrive*" "p0")
  )
)

;; From GZlibCompressor

(define-property format
  (of-object "GZlibCompressor")
  (prop-type "GParamEnum")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "G_ZLIB_COMPRESSOR_FORMAT_ZLIB")
)

(define-property level
  (of-object "GZlibCompressor")
  (prop-type "GParamInt")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "-1")
)

(define-property file-info
  (of-object "GZlibCompressor")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GZlibDecompressor

(define-property format
  (of-object "GZlibDecompressor")
  (prop-type "GParamEnum")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "G_ZLIB_COMPRESSOR_FORMAT_ZLIB")
)

(define-property file-info
  (of-object "GZlibDecompressor")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

;; From GInetAddress

(define-property family
  (of-object "GInetAddress")
  (prop-type "GParamEnum")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "G_SOCKET_FAMILY_INVALID")
)

(define-property bytes
  (of-object "GInetAddress")
  (prop-type "GParamPointer")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property is-any
  (of-object "GInetAddress")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "FALSE")
)

(define-property is-loopback
  (of-object "GInetAddress")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "FALSE")
)

(define-property is-link-local
  (of-object "GInetAddress")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "FALSE")
)

(define-property is-site-local
  (of-object "GInetAddress")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "FALSE")
)

(define-property is-multicast
  (of-object "GInetAddress")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "FALSE")
)

(define-property is-mc-global
  (of-object "GInetAddress")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "FALSE")
)

(define-property is-mc-link-local
  (of-object "GInetAddress")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "FALSE")
)

(define-property is-mc-node-local
  (of-object "GInetAddress")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "FALSE")
)

(define-property is-mc-org-local
  (of-object "GInetAddress")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "FALSE")
)

(define-property is-mc-site-local
  (of-object "GInetAddress")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "FALSE")
)

;; From GInetSocketAddress

(define-property address
  (of-object "GInetSocketAddress")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property port
  (of-object "GInetSocketAddress")
  (prop-type "GParamUInt")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "0")
)

(define-property flowinfo
  (of-object "GInetSocketAddress")
  (prop-type "GParamUInt")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "0")
)

(define-property scope-id
  (of-object "GInetSocketAddress")
  (prop-type "GParamUInt")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "0")
)

;; From GSocketAddress

(define-property family
  (of-object "GSocketAddress")
  (prop-type "GParamEnum")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "G_SOCKET_FAMILY_INVALID")
)

;; From GSocketAddressEnumerator

;; From GSocketConnectable

;; GSrvTarget is neither a GObject nor a GInterface. Not checked for signals and properties.

;; From GResolver

(define-signal reload
  (of-object "GResolver")
  (return-type "void")
  (flags "Run Last")
)

(define-property timeout
  (of-object "GResolver")
  (prop-type "GParamUInt")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "0")
)

;; From GNetworkAddress

(define-property hostname
  (of-object "GNetworkAddress")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property port
  (of-object "GNetworkAddress")
  (prop-type "GParamUInt")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "0")
)

(define-property scheme
  (of-object "GNetworkAddress")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

;; From GNetworkMonitor

(define-signal network-changed
  (of-object "GNetworkMonitor")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("gboolean" "p0")
  )
)

(define-property connectivity
  (of-object "GNetworkMonitor")
  (prop-type "GParamEnum")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "G_NETWORK_CONNECTIVITY_FULL")
)

(define-property network-available
  (of-object "GNetworkMonitor")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "FALSE")
)

(define-property network-metered
  (of-object "GNetworkMonitor")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "FALSE")
)

;; From GNetworkService

(define-property service
  (of-object "GNetworkService")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property protocol
  (of-object "GNetworkService")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property domain
  (of-object "GNetworkService")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property scheme
  (of-object "GNetworkService")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "")
)

;; From GSettings

(define-signal changed
  (of-object "GSettings")
  (return-type "void")
  (flags "Run Last")
  (detailed #t)
  (parameters
    '("const-gchar*" "p0")
  )
)

(define-signal change-event
  (of-object "GSettings")
  (return-type "gboolean")
  (flags "Run Last")
  (parameters
    '("gpointer" "p0")
    '("gint" "p1")
  )
)

(define-signal writable-changed
  (of-object "GSettings")
  (return-type "void")
  (flags "Run Last")
  (detailed #t)
  (parameters
    '("const-gchar*" "p0")
  )
)

(define-signal writable-change-event
  (of-object "GSettings")
  (return-type "gboolean")
  (flags "Run Last")
  (parameters
    '("GQuark" "p0")
  )
)

(define-property settings-schema
  (of-object "GSettings")
  (prop-type "GParamBoxed")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property schema
  (of-object "GSettings")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (deprecated #t)
  (default-value "")
)

(define-property schema-id
  (of-object "GSettings")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property backend
  (of-object "GSettings")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property path
  (of-object "GSettings")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property has-unapplied
  (of-object "GSettings")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "FALSE")
)

(define-property delay-apply
  (of-object "GSettings")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "FALSE")
)

;; GSettingsSchema is neither a GObject nor a GInterface. Not checked for signals and properties.

;; GSettingsSchemaKey is neither a GObject nor a GInterface. Not checked for signals and properties.

;; GSettingsSchemaSource is neither a GObject nor a GInterface. Not checked for signals and properties.

;; From GSimplePermission

;; From GSocket

(define-property family
  (of-object "GSocket")
  (prop-type "GParamEnum")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "G_SOCKET_FAMILY_INVALID")
)

(define-property type
  (of-object "GSocket")
  (prop-type "GParamEnum")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "G_SOCKET_TYPE_STREAM")
)

(define-property protocol
  (of-object "GSocket")
  (prop-type "GParamEnum")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "G_SOCKET_PROTOCOL_UNKNOWN")
)

(define-property fd
  (of-object "GSocket")
  (prop-type "GParamInt")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "-1")
)

(define-property blocking
  (of-object "GSocket")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "TRUE")
)

(define-property listen-backlog
  (of-object "GSocket")
  (prop-type "GParamInt")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "10")
)

(define-property keepalive
  (of-object "GSocket")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "FALSE")
)

(define-property local-address
  (of-object "GSocket")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property remote-address
  (of-object "GSocket")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property timeout
  (of-object "GSocket")
  (prop-type "GParamUInt")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "0")
)

(define-property ttl
  (of-object "GSocket")
  (prop-type "GParamUInt")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "0")
)

(define-property broadcast
  (of-object "GSocket")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "FALSE")
)

(define-property multicast-loopback
  (of-object "GSocket")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "TRUE")
)

(define-property multicast-ttl
  (of-object "GSocket")
  (prop-type "GParamUInt")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "1")
)

;; From GSocketClient

(define-signal event
  (of-object "GSocketClient")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("GSocketClientEvent" "p0")
    '("GSocketConnectable*" "p1")
    '("GIOStream*" "p2")
  )
)

(define-property family
  (of-object "GSocketClient")
  (prop-type "GParamEnum")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "G_SOCKET_FAMILY_INVALID")
)

(define-property type
  (of-object "GSocketClient")
  (prop-type "GParamEnum")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "G_SOCKET_TYPE_STREAM")
)

(define-property protocol
  (of-object "GSocketClient")
  (prop-type "GParamEnum")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "G_SOCKET_PROTOCOL_DEFAULT")
)

(define-property local-address
  (of-object "GSocketClient")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property timeout
  (of-object "GSocketClient")
  (prop-type "GParamUInt")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "0")
)

(define-property enable-proxy
  (of-object "GSocketClient")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "TRUE")
)

(define-property tls
  (of-object "GSocketClient")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "FALSE")
)

(define-property tls-validation-flags
  (of-object "GSocketClient")
  (prop-type "GParamFlags")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
  (default-value "G_TLS_CERTIFICATE_UNKNOWN_CA | G_TLS_CERTIFICATE_BAD_IDENTITY | G_TLS_CERTIFICATE_NOT_ACTIVATED | G_TLS_CERTIFICATE_EXPIRED | G_TLS_CERTIFICATE_REVOKED | G_TLS_CERTIFICATE_INSECURE | G_TLS_CERTIFICATE_GENERIC_ERROR")
)

(define-property proxy-resolver
  (of-object "GSocketClient")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GSocketConnection

(define-property socket
  (of-object "GSocketConnection")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

;; From GTcpConnection

(define-property graceful-disconnect
  (of-object "GTcpConnection")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "FALSE")
)

;; From GTcpWrapperConnection

(define-property base-io-stream
  (of-object "GTcpWrapperConnection")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

;; From GTlsBackend

;; From GTlsCertificate

(define-property certificate
  (of-object "GTlsCertificate")
  (prop-type "GParamBoxed")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property certificate-pem
  (of-object "GTlsCertificate")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property private-key
  (of-object "GTlsCertificate")
  (prop-type "GParamBoxed")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property private-key-pem
  (of-object "GTlsCertificate")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property issuer
  (of-object "GTlsCertificate")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property pkcs11-uri
  (of-object "GTlsCertificate")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property private-key-pkcs11-uri
  (of-object "GTlsCertificate")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property not-valid-before
  (of-object "GTlsCertificate")
  (prop-type "GParamBoxed")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property not-valid-after
  (of-object "GTlsCertificate")
  (prop-type "GParamBoxed")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property subject-name
  (of-object "GTlsCertificate")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "")
)

(define-property issuer-name
  (of-object "GTlsCertificate")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "")
)

(define-property dns-names
  (of-object "GTlsCertificate")
  (prop-type "GParamBoxed")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property ip-addresses
  (of-object "GTlsCertificate")
  (prop-type "GParamBoxed")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property pkcs12-data
  (of-object "GTlsCertificate")
  (prop-type "GParamBoxed")
  (docs "")
  (readable #f)
  (writable #t)
  (construct-only #t)
)

(define-property password
  (of-object "GTlsCertificate")
  (prop-type "GParamString")
  (docs "")
  (readable #f)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

;; From GTlsClientConnection

(define-property accepted-cas
  (of-object "GTlsClientConnection")
  (prop-type "GParamPointer")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property server-identity
  (of-object "GTlsClientConnection")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property use-ssl3
  (of-object "GTlsClientConnection")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
  (default-value "FALSE")
)

(define-property validation-flags
  (of-object "GTlsClientConnection")
  (prop-type "GParamFlags")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
  (default-value "G_TLS_CERTIFICATE_UNKNOWN_CA | G_TLS_CERTIFICATE_BAD_IDENTITY | G_TLS_CERTIFICATE_NOT_ACTIVATED | G_TLS_CERTIFICATE_EXPIRED | G_TLS_CERTIFICATE_REVOKED | G_TLS_CERTIFICATE_INSECURE | G_TLS_CERTIFICATE_GENERIC_ERROR")
)

;; From GTlsConnection

(define-signal accept-certificate
  (of-object "GTlsConnection")
  (return-type "gboolean")
  (flags "Run Last")
  (parameters
    '("GTlsCertificate*" "p0")
    '("GTlsCertificateFlags" "p1")
  )
)

(define-property base-io-stream
  (of-object "GTlsConnection")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property require-close-notify
  (of-object "GTlsConnection")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "TRUE")
)

(define-property rehandshake-mode
  (of-object "GTlsConnection")
  (prop-type "GParamEnum")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
  (default-value "G_TLS_REHANDSHAKE_SAFELY")
)

(define-property use-system-certdb
  (of-object "GTlsConnection")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (deprecated #t)
  (default-value "TRUE")
)

(define-property database
  (of-object "GTlsConnection")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property interaction
  (of-object "GTlsConnection")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property certificate
  (of-object "GTlsConnection")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property peer-certificate
  (of-object "GTlsConnection")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property peer-certificate-errors
  (of-object "GTlsConnection")
  (prop-type "GParamFlags")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "G_TLS_CERTIFICATE_NO_FLAGS")
)

(define-property advertised-protocols
  (of-object "GTlsConnection")
  (prop-type "GParamBoxed")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property negotiated-protocol
  (of-object "GTlsConnection")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "")
)

(define-property protocol-version
  (of-object "GTlsConnection")
  (prop-type "GParamEnum")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "G_TLS_PROTOCOL_VERSION_UNKNOWN")
)

(define-property ciphersuite-name
  (of-object "GTlsConnection")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "")
)

;; From GTlsDatabase

;; From GTlsFileDatabase

(define-property anchors
  (of-object "GTlsFileDatabase")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "")
)

;; From GTlsInteraction

;; From GTlsPassword

(define-property flags
  (of-object "GTlsPassword")
  (prop-type "GParamFlags")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "G_TLS_PASSWORD_NONE")
)

(define-property description
  (of-object "GTlsPassword")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "")
)

(define-property warning
  (of-object "GTlsPassword")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "")
)

;; From GTlsServerConnection

(define-property authentication-mode
  (of-object "GTlsServerConnection")
  (prop-type "GParamEnum")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "G_TLS_AUTHENTICATION_NONE")
)

;; From GUnixConnection

;; From GSocketListener

(define-signal event
  (of-object "GSocketListener")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("GSocketListenerEvent" "p0")
    '("GSocket*" "p1")
  )
)

(define-property listen-backlog
  (of-object "GSocketListener")
  (prop-type "GParamInt")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "10")
)

;; From GSocketService

(define-signal incoming
  (of-object "GSocketService")
  (return-type "gboolean")
  (flags "Run Last")
  (parameters
    '("GSocketConnection*" "p0")
    '("GObject*" "p1")
  )
)

(define-property active
  (of-object "GSocketService")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "TRUE")
)

;; From GThreadedSocketService

(define-signal run
  (of-object "GThreadedSocketService")
  (return-type "gboolean")
  (flags "Run Last")
  (parameters
    '("GSocketConnection*" "p0")
    '("GObject*" "p1")
  )
)

(define-property max-threads
  (of-object "GThreadedSocketService")
  (prop-type "GParamInt")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "10")
)

;; From GDBusAuthObserver

(define-signal authorize-authenticated-peer
  (of-object "GDBusAuthObserver")
  (return-type "gboolean")
  (flags "Run Last")
  (parameters
    '("GIOStream*" "p0")
    '("GCredentials*" "p1")
  )
)

(define-signal allow-mechanism
  (of-object "GDBusAuthObserver")
  (return-type "gboolean")
  (flags "Run Last")
  (parameters
    '("const-gchar*" "p0")
  )
)

;; From GDBusConnection

(define-signal closed
  (of-object "GDBusConnection")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("gboolean" "p0")
    '("GError*" "p1")
  )
)

(define-property stream
  (of-object "GDBusConnection")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property address
  (of-object "GDBusConnection")
  (prop-type "GParamString")
  (docs "")
  (readable #f)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property flags
  (of-object "GDBusConnection")
  (prop-type "GParamFlags")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "G_DBUS_CONNECTION_FLAGS_NONE")
)

(define-property guid
  (of-object "GDBusConnection")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property unique-name
  (of-object "GDBusConnection")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "")
)

(define-property closed
  (of-object "GDBusConnection")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "FALSE")
)

(define-property exit-on-close
  (of-object "GDBusConnection")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "FALSE")
)

(define-property capabilities
  (of-object "GDBusConnection")
  (prop-type "GParamFlags")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "G_DBUS_CAPABILITY_FLAGS_NONE")
)

(define-property authentication-observer
  (of-object "GDBusConnection")
  (prop-type "GParamObject")
  (docs "")
  (readable #f)
  (writable #t)
  (construct-only #t)
)

;; GDBusError is neither a GObject nor a GInterface. Not checked for signals and properties.

;; GDBusAnnotationInfo is neither a GObject nor a GInterface. Not checked for signals and properties.

;; GDBusArgInfo is neither a GObject nor a GInterface. Not checked for signals and properties.

;; From GDBusMenuModel

;; GDBusMethodInfo is neither a GObject nor a GInterface. Not checked for signals and properties.

;; GDBusSignalInfo is neither a GObject nor a GInterface. Not checked for signals and properties.

;; GDBusPropertyInfo is neither a GObject nor a GInterface. Not checked for signals and properties.

;; GDBusInterfaceInfo is neither a GObject nor a GInterface. Not checked for signals and properties.

;; From GDBusInterfaceSkeleton

(define-signal g-authorize-method
  (of-object "GDBusInterfaceSkeleton")
  (return-type "gboolean")
  (flags "Run Last")
  (parameters
    '("GDBusMethodInvocation*" "p0")
  )
)

(define-property g-flags
  (of-object "GDBusInterfaceSkeleton")
  (prop-type "GParamFlags")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "G_DBUS_INTERFACE_SKELETON_FLAGS_NONE")
)

;; From GDBusObject

(define-signal interface-added
  (of-object "GDBusObject")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("GDBusInterface*" "p0")
  )
)

(define-signal interface-removed
  (of-object "GDBusObject")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("GDBusInterface*" "p0")
  )
)

;; From GDBusObjectManager

(define-signal interface-added
  (of-object "GDBusObjectManager")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("GDBusObject*" "p0")
    '("GDBusInterface*" "p1")
  )
)

(define-signal interface-removed
  (of-object "GDBusObjectManager")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("GDBusObject*" "p0")
    '("GDBusInterface*" "p1")
  )
)

(define-signal object-added
  (of-object "GDBusObjectManager")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("GDBusObject*" "p0")
  )
)

(define-signal object-removed
  (of-object "GDBusObjectManager")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("GDBusObject*" "p0")
  )
)

;; From GDBusObjectManagerClient

(define-signal interface-proxy-signal
  (of-object "GDBusObjectManagerClient")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("GDBusObjectProxy*" "p0")
    '("GDBusProxy*" "p1")
    '("const-gchar*" "p2")
    '("const-gchar*" "p3")
    '("GVariant*" "p4")
  )
)

(define-signal interface-proxy-properties-changed
  (of-object "GDBusObjectManagerClient")
  (return-type "void")
  (flags "Run Last")
  (parameters
    '("GDBusObjectProxy*" "p0")
    '("GDBusProxy*" "p1")
    '("GVariant*" "p2")
    '("const-gchar*const*" "p3")
  )
)

(define-property bus-type
  (of-object "GDBusObjectManagerClient")
  (prop-type "GParamEnum")
  (docs "")
  (readable #f)
  (writable #t)
  (construct-only #t)
  (default-value "G_BUS_TYPE_NONE")
)

(define-property connection
  (of-object "GDBusObjectManagerClient")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property flags
  (of-object "GDBusObjectManagerClient")
  (prop-type "GParamFlags")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_NONE")
)

(define-property object-path
  (of-object "GDBusObjectManagerClient")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property name
  (of-object "GDBusObjectManagerClient")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property name-owner
  (of-object "GDBusObjectManagerClient")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "")
)

(define-property get-proxy-type-func
  (of-object "GDBusObjectManagerClient")
  (prop-type "GParamPointer")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property get-proxy-type-user-data
  (of-object "GDBusObjectManagerClient")
  (prop-type "GParamPointer")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property get-proxy-type-destroy-notify
  (of-object "GDBusObjectManagerClient")
  (prop-type "GParamPointer")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

;; From GDBusObjectManagerServer

(define-property connection
  (of-object "GDBusObjectManagerServer")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property object-path
  (of-object "GDBusObjectManagerServer")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

;; From GDBusObjectProxy

(define-property g-object-path
  (of-object "GDBusObjectProxy")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property g-connection
  (of-object "GDBusObjectProxy")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

;; From GDBusObjectSkeleton

(define-signal authorize-method
  (of-object "GDBusObjectSkeleton")
  (return-type "gboolean")
  (flags "Run Last")
  (parameters
    '("GDBusInterfaceSkeleton*" "p0")
    '("GDBusMethodInvocation*" "p1")
  )
)

(define-property g-object-path
  (of-object "GDBusObjectSkeleton")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "")
)

;; GDBusNodeInfo is neither a GObject nor a GInterface. Not checked for signals and properties.

;; From GDBusMessage

(define-property locked
  (of-object "GDBusMessage")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "FALSE")
)

;; From GDBusMethodInvocation

;; From GDBusProxy

(define-signal g-properties-changed
  (of-object "GDBusProxy")
  (return-type "void")
  (flags "Run Last, Must Collect")
  (parameters
    '("GVariant*" "p0")
    '("const-gchar*const*" "p1")
  )
)

(define-signal g-signal
  (of-object "GDBusProxy")
  (return-type "void")
  (flags "Run Last, Must Collect")
  (detailed #t)
  (parameters
    '("const-gchar*" "p0")
    '("const-gchar*" "p1")
    '("GVariant*" "p2")
  )
)

(define-property g-connection
  (of-object "GDBusProxy")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)

(define-property g-bus-type
  (of-object "GDBusProxy")
  (prop-type "GParamEnum")
  (docs "")
  (readable #f)
  (writable #t)
  (construct-only #t)
  (default-value "G_BUS_TYPE_NONE")
)

(define-property g-name
  (of-object "GDBusProxy")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property g-name-owner
  (of-object "GDBusProxy")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "")
)

(define-property g-flags
  (of-object "GDBusProxy")
  (prop-type "GParamFlags")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "G_DBUS_PROXY_FLAGS_NONE")
)

(define-property g-object-path
  (of-object "GDBusProxy")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property g-interface-name
  (of-object "GDBusProxy")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property g-default-timeout
  (of-object "GDBusProxy")
  (prop-type "GParamInt")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
  (default-value "-1")
)

(define-property g-interface-info
  (of-object "GDBusProxy")
  (prop-type "GParamBoxed")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GDBusServer

(define-signal new-connection
  (of-object "GDBusServer")
  (return-type "gboolean")
  (flags "Run Last")
  (parameters
    '("GDBusConnection*" "p0")
  )
)

(define-property address
  (of-object "GDBusServer")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property client-address
  (of-object "GDBusServer")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "")
)

(define-property flags
  (of-object "GDBusServer")
  (prop-type "GParamFlags")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "G_DBUS_SERVER_FLAGS_NONE")
)

(define-property guid
  (of-object "GDBusServer")
  (prop-type "GParamString")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
  (default-value "")
)

(define-property active
  (of-object "GDBusServer")
  (prop-type "GParamBoolean")
  (docs "")
  (readable #t)
  (writable #f)
  (construct-only #f)
  (default-value "FALSE")
)

(define-property authentication-observer
  (of-object "GDBusServer")
  (prop-type "GParamObject")
  (docs "")
  (readable #t)
  (writable #t)
  (construct-only #t)
)


