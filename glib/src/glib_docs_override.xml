<root>
  <substitute_type_name from="GDateMonth" to="Glib::Date::Month" />
  <substitute_type_name from="GDateWeekday" to="Glib::Date::Weekday" />
  <substitute_type_name from="GDateDMY" to="Glib::Date::DMY" />

  <!-- enum GOptionArg is not wrapped. Don't substitute. -->
  <substitute_enumerator_name from_prefix="G_OPTION_ARG_" to_prefix="G_OPTION_ARG_" />
  <!-- These are preprocessor defines. Don't substitute. -->
  <substitute_enumerator_name from="G_PARAM_STATIC_STRINGS" to="G_PARAM_STATIC_STRINGS" />
  <substitute_enumerator_name from_prefix="G_VARIANT_TYPE_" to_prefix="G_VARIANT_TYPE_" />

    <function name="g_option_context_set_summary">
    <parameters>
    <parameter name="context">
    <parameter_description> a #GOptionContext
    </parameter_description>
    </parameter>
            <parameter name="summary">
                <parameter_description> a string to be shown in --help output before the list of
                    options
                </parameter_description>
            </parameter>
        </parameters>
        <return></return>
    </function>

    <function name="g_option_context_set_description">
        <parameters>
        <parameter name="context">
        <parameter_description> a #GOptionContext
        </parameter_description>
        </parameter>
            <parameter name="description">
                <parameter_description> a string to be shown in --help output
                    after the list of options
                </parameter_description>
            </parameter>
        </parameters>
        <return></return>
    </function>

<function name="g_key_file_get_double">
<description>
Return value: the value associated with the key as a double.

Since: 2.14

\throw Glib::KeyFileError
</description>
</function>


<function name="g_key_file_load_from_file">
<description>
Loads a key file into an empty KeyFile instance.
If the file could not be loaded then a FileError or KeyFileError exception is thrown.

Since: 2.6

\throw Glib::FileError
\throw Glib::KeyFileError
</description>
</function>


<function name="g_key_file_get_value">
<description>
Returns the value associated with @key under @group_name.

Since: 2.6

\throw Glib::KeyFileError in the event the key cannot be found (with the Glib::KeyFileError::KEY_NOT_FOUND code).
\throw Glib::KeyFileError in the event that the @group_name cannot be found (with the Glib::KeyFileError::GROUP_NOT_FOUND code).
</description>
<return> The value as a string.
</return>
</function>

<function name="g_key_file_get_comment">
<description>
Retrieves a comment above @key from @group_name.
If @key is %NULL then @comment will be read from above 
@group_name. If both @key and @group_name are %NULL, then 
@comment will be read from above the first group in the file.
Use the overrides for a %NULL @key or @group.

Since: 2.6

\throw Glib::KeyFileError
</description>
<parameters>
<parameter name="key_file">
<parameter_description> a #GKeyFile
</parameter_description>
</parameter>
<parameter name="group_name">
<parameter_description> a group name
</parameter_description>
</parameter>
<parameter name="key">
<parameter_description> a key
</parameter_description>
</parameter>
<parameter name="error">
<parameter_description> return location for a #GError
</parameter_description>
</parameter>
</parameters>
<return> The comment
</return>
</function>

<function name="g_key_file_set_comment">
<description>
Places a comment above @key from @group_name.
If @key is %NULL then @comment will be written above @group_name.  
If both @key and @group_name  are %NULL, then @comment will be 
written above the first group in the file.

\throw Glib::KeyFileError
</description>
<return></return>
</function>

<function name="g_key_file_remove_comment">
<description>
Removes a comment above @key from @group_name.
If @key is %NULL then @comment will be removed above @group_name. 
If both @key and @group_name are %NULL, then @comment will
be removed above the first group in the file.

\throw Glib::KeyFileError
</description>
<return></return>
</function>

<function name="g_key_file_has_key">
<description>
Looks whether the key file has the key @key in the group
@group_name. 

Since: 2.6

\throw Glib::KeyFileError
</description>
</function>

<function name="g_key_file_get_string">
<description>
Return value: a newly allocated string or %NULL.

Since: 2.6

\throw Glib::KeyFileError
</description>
</function>

<function name="g_key_file_get_locale_string">
<description>
Return value: a newly allocated string or %NULL.

Since: 2.6

\throw Glib::KeyFileError
</description>
</function>

<function name="g_key_file_get_boolean">
<description>
Return value: the value associated with the key as a boolean.

Since: 2.6

\throw Glib::KeyFileError
</description>
</function>

<function name="g_key_file_get_integer">
<description>
Return value: the value associated with the key as an integer.

Since: 2.6

\throw Glib::KeyFileError
</description>
</function>

<function name="g_key_file_remove_group">
<description>
Removes the specified group, @group_name, 
from the key file. 

\throw Glib::KeyFileError
</description>
<return></return>
</function>

<function name="g_key_file_remove_key">
<description>
Removes @key in @group_name from the key file. 

\throw Glib::KeyFileError
</description>
<return></return>
</function>

</root>
