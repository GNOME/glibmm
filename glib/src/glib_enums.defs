(define-flags-extended AsciiType
  (in-module "GLib")
  (c-name "GAsciiType")
  (values
    '("alnum" "G_ASCII_ALNUM" "1")
    '("alpha" "G_ASCII_ALPHA" "2")
    '("cntrl" "G_ASCII_CNTRL" "4")
    '("digit" "G_ASCII_DIGIT" "8")
    '("graph" "G_ASCII_GRAPH" "16")
    '("lower" "G_ASCII_LOWER" "32")
    '("print" "G_ASCII_PRINT" "64")
    '("punct" "G_ASCII_PUNCT" "128")
    '("space" "G_ASCII_SPACE" "256")
    '("upper" "G_ASCII_UPPER" "512")
    '("xdigit" "G_ASCII_XDIGIT" "1024")
  )
)

(define-enum-extended BookmarkFileError
  (in-module "GLib")
  (c-name "GBookmarkFileError")
  (values
    '("invalid_uri" "G_BOOKMARK_FILE_ERROR_INVALID_URI" "0")
    '("invalid_value" "G_BOOKMARK_FILE_ERROR_INVALID_VALUE" "1")
    '("app_not_registered" "G_BOOKMARK_FILE_ERROR_APP_NOT_REGISTERED" "2")
    '("uri_not_found" "G_BOOKMARK_FILE_ERROR_URI_NOT_FOUND" "3")
    '("read" "G_BOOKMARK_FILE_ERROR_READ" "4")
    '("unknown_encoding" "G_BOOKMARK_FILE_ERROR_UNKNOWN_ENCODING" "5")
    '("write" "G_BOOKMARK_FILE_ERROR_WRITE" "6")
    '("file_not_found" "G_BOOKMARK_FILE_ERROR_FILE_NOT_FOUND" "7")
  )
)

(define-enum-extended ChecksumType
  (in-module "GLib")
  (c-name "GChecksumType")
  (values
    '("md5" "G_CHECKSUM_MD5" "0")
    '("sha1" "G_CHECKSUM_SHA1" "1")
    '("sha256" "G_CHECKSUM_SHA256" "2")
    '("sha512" "G_CHECKSUM_SHA512" "3")
  )
)

(define-enum-extended ConvertError
  (in-module "GLib")
  (c-name "GConvertError")
  (values
    '("no_conversion" "G_CONVERT_ERROR_NO_CONVERSION" "0")
    '("illegal_sequence" "G_CONVERT_ERROR_ILLEGAL_SEQUENCE" "1")
    '("failed" "G_CONVERT_ERROR_FAILED" "2")
    '("partial_input" "G_CONVERT_ERROR_PARTIAL_INPUT" "3")
    '("bad_uri" "G_CONVERT_ERROR_BAD_URI" "4")
    '("not_absolute_path" "G_CONVERT_ERROR_NOT_ABSOLUTE_PATH" "5")
    '("no_memory" "G_CONVERT_ERROR_NO_MEMORY" "6")
  )
)

(define-enum-extended DateDMY
  (in-module "GLib")
  (c-name "GDateDMY")
  (values
    '("day" "G_DATE_DAY" "0")
    '("month" "G_DATE_MONTH" "1")
    '("year" "G_DATE_YEAR" "2")
  )
)

(define-enum-extended DateMonth
  (in-module "GLib")
  (c-name "GDateMonth")
  (values
    '("bad_month" "G_DATE_BAD_MONTH" "0")
    '("january" "G_DATE_JANUARY" "1")
    '("february" "G_DATE_FEBRUARY" "2")
    '("march" "G_DATE_MARCH" "3")
    '("april" "G_DATE_APRIL" "4")
    '("may" "G_DATE_MAY" "5")
    '("june" "G_DATE_JUNE" "6")
    '("july" "G_DATE_JULY" "7")
    '("august" "G_DATE_AUGUST" "8")
    '("september" "G_DATE_SEPTEMBER" "9")
    '("october" "G_DATE_OCTOBER" "10")
    '("november" "G_DATE_NOVEMBER" "11")
    '("december" "G_DATE_DECEMBER" "12")
  )
)

(define-enum-extended DateWeekday
  (in-module "GLib")
  (c-name "GDateWeekday")
  (values
    '("bad_weekday" "G_DATE_BAD_WEEKDAY" "0")
    '("monday" "G_DATE_MONDAY" "1")
    '("tuesday" "G_DATE_TUESDAY" "2")
    '("wednesday" "G_DATE_WEDNESDAY" "3")
    '("thursday" "G_DATE_THURSDAY" "4")
    '("friday" "G_DATE_FRIDAY" "5")
    '("saturday" "G_DATE_SATURDAY" "6")
    '("sunday" "G_DATE_SUNDAY" "7")
  )
)

(define-enum-extended ErrorType
  (in-module "GLib")
  (c-name "GErrorType")
  (values
    '("unknown" "G_ERR_UNKNOWN" "0")
    '("unexp_eof" "G_ERR_UNEXP_EOF" "1")
    '("unexp_eof_in_string" "G_ERR_UNEXP_EOF_IN_STRING" "2")
    '("unexp_eof_in_comment" "G_ERR_UNEXP_EOF_IN_COMMENT" "3")
    '("non_digit_in_const" "G_ERR_NON_DIGIT_IN_CONST" "4")
    '("digit_radix" "G_ERR_DIGIT_RADIX" "5")
    '("float_radix" "G_ERR_FLOAT_RADIX" "6")
    '("float_malformed" "G_ERR_FLOAT_MALFORMED" "7")
  )
)

(define-enum-extended FileError
  (in-module "GLib")
  (c-name "GFileError")
  (values
    '("exist" "G_FILE_ERROR_EXIST" "0")
    '("isdir" "G_FILE_ERROR_ISDIR" "1")
    '("acces" "G_FILE_ERROR_ACCES" "2")
    '("nametoolong" "G_FILE_ERROR_NAMETOOLONG" "3")
    '("noent" "G_FILE_ERROR_NOENT" "4")
    '("notdir" "G_FILE_ERROR_NOTDIR" "5")
    '("nxio" "G_FILE_ERROR_NXIO" "6")
    '("nodev" "G_FILE_ERROR_NODEV" "7")
    '("rofs" "G_FILE_ERROR_ROFS" "8")
    '("txtbsy" "G_FILE_ERROR_TXTBSY" "9")
    '("fault" "G_FILE_ERROR_FAULT" "10")
    '("loop" "G_FILE_ERROR_LOOP" "11")
    '("nospc" "G_FILE_ERROR_NOSPC" "12")
    '("nomem" "G_FILE_ERROR_NOMEM" "13")
    '("mfile" "G_FILE_ERROR_MFILE" "14")
    '("nfile" "G_FILE_ERROR_NFILE" "15")
    '("badf" "G_FILE_ERROR_BADF" "16")
    '("inval" "G_FILE_ERROR_INVAL" "17")
    '("pipe" "G_FILE_ERROR_PIPE" "18")
    '("again" "G_FILE_ERROR_AGAIN" "19")
    '("intr" "G_FILE_ERROR_INTR" "20")
    '("io" "G_FILE_ERROR_IO" "21")
    '("perm" "G_FILE_ERROR_PERM" "22")
    '("nosys" "G_FILE_ERROR_NOSYS" "23")
    '("failed" "G_FILE_ERROR_FAILED" "24")
  )
)

(define-flags-extended FileTest
  (in-module "GLib")
  (c-name "GFileTest")
  (values
    '("is_regular" "G_FILE_TEST_IS_REGULAR" "1")
    '("is_symlink" "G_FILE_TEST_IS_SYMLINK" "2")
    '("is_dir" "G_FILE_TEST_IS_DIR" "4")
    '("is_executable" "G_FILE_TEST_IS_EXECUTABLE" "8")
    '("exists" "G_FILE_TEST_EXISTS" "16")
  )
)

(define-flags-extended FormatSizeFlags
  (in-module "GLib")
  (c-name "GFormatSizeFlags")
  (values
    '("default" "G_FORMAT_SIZE_DEFAULT" "0")
    '("long_format" "G_FORMAT_SIZE_LONG_FORMAT" "1")
    '("iec_units" "G_FORMAT_SIZE_IEC_UNITS" "2")
  )
)

(define-flags-extended HookFlagMask
  (in-module "GLib")
  (c-name "GHookFlagMask")
  (values
    '("active" "G_HOOK_FLAG_ACTIVE" "1")
    '("in_call" "G_HOOK_FLAG_IN_CALL" "2")
    '("mask" "G_HOOK_FLAG_MASK" "15")
  )
)

(define-enum-extended IOChannelError
  (in-module "GLib")
  (c-name "GIOChannelError")
  (values
    '("fbig" "G_IO_CHANNEL_ERROR_FBIG" "0")
    '("inval" "G_IO_CHANNEL_ERROR_INVAL" "1")
    '("io" "G_IO_CHANNEL_ERROR_IO" "2")
    '("isdir" "G_IO_CHANNEL_ERROR_ISDIR" "3")
    '("nospc" "G_IO_CHANNEL_ERROR_NOSPC" "4")
    '("nxio" "G_IO_CHANNEL_ERROR_NXIO" "5")
    '("overflow" "G_IO_CHANNEL_ERROR_OVERFLOW" "6")
    '("pipe" "G_IO_CHANNEL_ERROR_PIPE" "7")
    '("failed" "G_IO_CHANNEL_ERROR_FAILED" "8")
  )
)

(define-flags-extended IOCondition
  (in-module "GLib")
  (c-name "GIOCondition")
  (values
    '("in" "G_IO_IN" "1")
    '("out" "G_IO_OUT" "4")
    '("pri" "G_IO_PRI" "2")
    '("err" "G_IO_ERR" "8")
    '("hup" "G_IO_HUP" "16")
    '("nval" "G_IO_NVAL" "32")
  )
)

(define-enum-extended IOError
  (in-module "GLib")
  (c-name "GIOError")
  (values
    '("none" "G_IO_ERROR_NONE" "0")
    '("again" "G_IO_ERROR_AGAIN" "1")
    '("inval" "G_IO_ERROR_INVAL" "2")
    '("unknown" "G_IO_ERROR_UNKNOWN" "3")
  )
)

(define-flags-extended IOFlags
  (in-module "GLib")
  (c-name "GIOFlags")
  (values
    '("append" "G_IO_FLAG_APPEND" "1")
    '("nonblock" "G_IO_FLAG_NONBLOCK" "2")
    '("is_readable" "G_IO_FLAG_IS_READABLE" "4")
    '("is_writable" "G_IO_FLAG_IS_WRITABLE" "8")
    '("is_writeable" "G_IO_FLAG_IS_WRITEABLE" "8")
    '("is_seekable" "G_IO_FLAG_IS_SEEKABLE" "16")
    '("mask" "G_IO_FLAG_MASK" "31")
    '("get_mask" "G_IO_FLAG_GET_MASK" "31")
    '("set_mask" "G_IO_FLAG_SET_MASK" "3")
  )
)

(define-enum-extended IOStatus
  (in-module "GLib")
  (c-name "GIOStatus")
  (values
    '("error" "G_IO_STATUS_ERROR" "0")
    '("normal" "G_IO_STATUS_NORMAL" "1")
    '("eof" "G_IO_STATUS_EOF" "2")
    '("again" "G_IO_STATUS_AGAIN" "3")
  )
)

(define-enum-extended KeyFileError
  (in-module "GLib")
  (c-name "GKeyFileError")
  (values
    '("unknown_encoding" "G_KEY_FILE_ERROR_UNKNOWN_ENCODING" "0")
    '("parse" "G_KEY_FILE_ERROR_PARSE" "1")
    '("not_found" "G_KEY_FILE_ERROR_NOT_FOUND" "2")
    '("key_not_found" "G_KEY_FILE_ERROR_KEY_NOT_FOUND" "3")
    '("group_not_found" "G_KEY_FILE_ERROR_GROUP_NOT_FOUND" "4")
    '("invalid_value" "G_KEY_FILE_ERROR_INVALID_VALUE" "5")
  )
)

(define-flags-extended KeyFileFlags
  (in-module "GLib")
  (c-name "GKeyFileFlags")
  (values
    '("none" "G_KEY_FILE_NONE" "0")
    '("keep_comments" "G_KEY_FILE_KEEP_COMMENTS" "1")
    '("keep_translations" "G_KEY_FILE_KEEP_TRANSLATIONS" "2")
  )
)

(define-flags-extended LogLevelFlags
  (in-module "GLib")
  (c-name "GLogLevelFlags")
  (values
    '("flag_recursion" "G_LOG_FLAG_RECURSION" "1")
    '("flag_fatal" "G_LOG_FLAG_FATAL" "2")
    '("level_error" "G_LOG_LEVEL_ERROR" "4")
    '("level_critical" "G_LOG_LEVEL_CRITICAL" "8")
    '("level_warning" "G_LOG_LEVEL_WARNING" "16")
    '("level_message" "G_LOG_LEVEL_MESSAGE" "32")
    '("level_info" "G_LOG_LEVEL_INFO" "64")
    '("level_debug" "G_LOG_LEVEL_DEBUG" "128")
    '("level_mask" "G_LOG_LEVEL_MASK" "-4")
  )
)

(define-enum-extended LogWriterOutput
  (in-module "GLib")
  (c-name "GLogWriterOutput")
  (values
    '("handled" "G_LOG_WRITER_HANDLED" "1")
    '("unhandled" "G_LOG_WRITER_UNHANDLED" "0")
  )
)

(define-flags-extended MarkupCollectType
  (in-module "GLib")
  (c-name "GMarkupCollectType")
  (values
    '("invalid" "G_MARKUP_COLLECT_INVALID" "0")
    '("string" "G_MARKUP_COLLECT_STRING" "1")
    '("strdup" "G_MARKUP_COLLECT_STRDUP" "2")
    '("boolean" "G_MARKUP_COLLECT_BOOLEAN" "3")
    '("tristate" "G_MARKUP_COLLECT_TRISTATE" "4")
    '("optional" "G_MARKUP_COLLECT_OPTIONAL" "65536")
  )
)

(define-enum-extended MarkupError
  (in-module "GLib")
  (c-name "GMarkupError")
  (values
    '("bad_utf8" "G_MARKUP_ERROR_BAD_UTF8" "0")
    '("empty" "G_MARKUP_ERROR_EMPTY" "1")
    '("parse" "G_MARKUP_ERROR_PARSE" "2")
    '("unknown_element" "G_MARKUP_ERROR_UNKNOWN_ELEMENT" "3")
    '("unknown_attribute" "G_MARKUP_ERROR_UNKNOWN_ATTRIBUTE" "4")
    '("invalid_content" "G_MARKUP_ERROR_INVALID_CONTENT" "5")
    '("missing_attribute" "G_MARKUP_ERROR_MISSING_ATTRIBUTE" "6")
  )
)

(define-flags-extended MarkupParseFlags
  (in-module "GLib")
  (c-name "GMarkupParseFlags")
  (values
    '("do_not_use_this_unsupported_flag" "G_MARKUP_DO_NOT_USE_THIS_UNSUPPORTED_FLAG" "1")
    '("treat_cdata_as_text" "G_MARKUP_TREAT_CDATA_AS_TEXT" "2")
    '("prefix_error_position" "G_MARKUP_PREFIX_ERROR_POSITION" "4")
    '("ignore_qualified" "G_MARKUP_IGNORE_QUALIFIED" "8")
  )
)

(define-enum-extended NormalizeMode
  (in-module "GLib")
  (c-name "GNormalizeMode")
  (values
    '("default" "G_NORMALIZE_DEFAULT" "0")
    '("nfd" "G_NORMALIZE_NFD" "0")
    '("default_compose" "G_NORMALIZE_DEFAULT_COMPOSE" "1")
    '("nfc" "G_NORMALIZE_NFC" "1")
    '("all" "G_NORMALIZE_ALL" "2")
    '("nfkd" "G_NORMALIZE_NFKD" "2")
    '("all_compose" "G_NORMALIZE_ALL_COMPOSE" "3")
    '("nfkc" "G_NORMALIZE_NFKC" "3")
  )
)

(define-enum-extended OnceStatus
  (in-module "GLib")
  (c-name "GOnceStatus")
  (values
    '("notcalled" "G_ONCE_STATUS_NOTCALLED" "0")
    '("progress" "G_ONCE_STATUS_PROGRESS" "1")
    '("ready" "G_ONCE_STATUS_READY" "2")
  )
)

(define-enum-extended OptionArg
  (in-module "GLib")
  (c-name "GOptionArg")
  (values
    '("none" "G_OPTION_ARG_NONE" "0")
    '("string" "G_OPTION_ARG_STRING" "1")
    '("int" "G_OPTION_ARG_INT" "2")
    '("callback" "G_OPTION_ARG_CALLBACK" "3")
    '("filename" "G_OPTION_ARG_FILENAME" "4")
    '("string_array" "G_OPTION_ARG_STRING_ARRAY" "5")
    '("filename_array" "G_OPTION_ARG_FILENAME_ARRAY" "6")
    '("double" "G_OPTION_ARG_DOUBLE" "7")
    '("int64" "G_OPTION_ARG_INT64" "8")
  )
)

(define-enum-extended OptionError
  (in-module "GLib")
  (c-name "GOptionError")
  (values
    '("unknown_option" "G_OPTION_ERROR_UNKNOWN_OPTION" "0")
    '("bad_value" "G_OPTION_ERROR_BAD_VALUE" "1")
    '("failed" "G_OPTION_ERROR_FAILED" "2")
  )
)

(define-flags-extended OptionFlags
  (in-module "GLib")
  (c-name "GOptionFlags")
  (values
    '("none" "G_OPTION_FLAG_NONE" "0")
    '("hidden" "G_OPTION_FLAG_HIDDEN" "1")
    '("in_main" "G_OPTION_FLAG_IN_MAIN" "2")
    '("reverse" "G_OPTION_FLAG_REVERSE" "4")
    '("no_arg" "G_OPTION_FLAG_NO_ARG" "8")
    '("filename" "G_OPTION_FLAG_FILENAME" "16")
    '("optional_arg" "G_OPTION_FLAG_OPTIONAL_ARG" "32")
    '("noalias" "G_OPTION_FLAG_NOALIAS" "64")
  )
)

(define-flags-extended RegexCompileFlags
  (in-module "GLib")
  (c-name "GRegexCompileFlags")
  (values
    '("caseless" "G_REGEX_CASELESS" "1")
    '("multiline" "G_REGEX_MULTILINE" "2")
    '("dotall" "G_REGEX_DOTALL" "4")
    '("extended" "G_REGEX_EXTENDED" "8")
    '("anchored" "G_REGEX_ANCHORED" "16")
    '("dollar_endonly" "G_REGEX_DOLLAR_ENDONLY" "32")
    '("ungreedy" "G_REGEX_UNGREEDY" "512")
    '("raw" "G_REGEX_RAW" "2048")
    '("no_auto_capture" "G_REGEX_NO_AUTO_CAPTURE" "4096")
    '("optimize" "G_REGEX_OPTIMIZE" "8192")
    '("firstline" "G_REGEX_FIRSTLINE" "262144")
    '("dupnames" "G_REGEX_DUPNAMES" "524288")
    '("newline_cr" "G_REGEX_NEWLINE_CR" "1048576")
    '("newline_lf" "G_REGEX_NEWLINE_LF" "2097152")
    '("newline_crlf" "G_REGEX_NEWLINE_CRLF" "3145728")
    '("newline_anycrlf" "G_REGEX_NEWLINE_ANYCRLF" "5242880")
    '("bsr_anycrlf" "G_REGEX_BSR_ANYCRLF" "8388608")
    '("javascript_compat" "G_REGEX_JAVASCRIPT_COMPAT" "33554432")
  )
)

(define-enum-extended RegexError
  (in-module "GLib")
  (c-name "GRegexError")
  (values
    '("compile" "G_REGEX_ERROR_COMPILE" "0")
    '("optimize" "G_REGEX_ERROR_OPTIMIZE" "1")
    '("replace" "G_REGEX_ERROR_REPLACE" "2")
    '("match" "G_REGEX_ERROR_MATCH" "3")
    '("internal" "G_REGEX_ERROR_INTERNAL" "4")
    '("stray_backslash" "G_REGEX_ERROR_STRAY_BACKSLASH" "101")
    '("missing_control_char" "G_REGEX_ERROR_MISSING_CONTROL_CHAR" "102")
    '("unrecognized_escape" "G_REGEX_ERROR_UNRECOGNIZED_ESCAPE" "103")
    '("quantifiers_out_of_order" "G_REGEX_ERROR_QUANTIFIERS_OUT_OF_ORDER" "104")
    '("quantifier_too_big" "G_REGEX_ERROR_QUANTIFIER_TOO_BIG" "105")
    '("unterminated_character_class" "G_REGEX_ERROR_UNTERMINATED_CHARACTER_CLASS" "106")
    '("invalid_escape_in_character_class" "G_REGEX_ERROR_INVALID_ESCAPE_IN_CHARACTER_CLASS" "107")
    '("range_out_of_order" "G_REGEX_ERROR_RANGE_OUT_OF_ORDER" "108")
    '("nothing_to_repeat" "G_REGEX_ERROR_NOTHING_TO_REPEAT" "109")
    '("unrecognized_character" "G_REGEX_ERROR_UNRECOGNIZED_CHARACTER" "112")
    '("posix_named_class_outside_class" "G_REGEX_ERROR_POSIX_NAMED_CLASS_OUTSIDE_CLASS" "113")
    '("unmatched_parenthesis" "G_REGEX_ERROR_UNMATCHED_PARENTHESIS" "114")
    '("inexistent_subpattern_reference" "G_REGEX_ERROR_INEXISTENT_SUBPATTERN_REFERENCE" "115")
    '("unterminated_comment" "G_REGEX_ERROR_UNTERMINATED_COMMENT" "118")
    '("expression_too_large" "G_REGEX_ERROR_EXPRESSION_TOO_LARGE" "120")
    '("memory_error" "G_REGEX_ERROR_MEMORY_ERROR" "121")
    '("variable_length_lookbehind" "G_REGEX_ERROR_VARIABLE_LENGTH_LOOKBEHIND" "125")
    '("malformed_condition" "G_REGEX_ERROR_MALFORMED_CONDITION" "126")
    '("too_many_conditional_branches" "G_REGEX_ERROR_TOO_MANY_CONDITIONAL_BRANCHES" "127")
    '("assertion_expected" "G_REGEX_ERROR_ASSERTION_EXPECTED" "128")
    '("unknown_posix_class_name" "G_REGEX_ERROR_UNKNOWN_POSIX_CLASS_NAME" "130")
    '("posix_collating_elements_not_supported" "G_REGEX_ERROR_POSIX_COLLATING_ELEMENTS_NOT_SUPPORTED" "131")
    '("hex_code_too_large" "G_REGEX_ERROR_HEX_CODE_TOO_LARGE" "134")
    '("invalid_condition" "G_REGEX_ERROR_INVALID_CONDITION" "135")
    '("single_byte_match_in_lookbehind" "G_REGEX_ERROR_SINGLE_BYTE_MATCH_IN_LOOKBEHIND" "136")
    '("infinite_loop" "G_REGEX_ERROR_INFINITE_LOOP" "140")
    '("missing_subpattern_name_terminator" "G_REGEX_ERROR_MISSING_SUBPATTERN_NAME_TERMINATOR" "142")
    '("duplicate_subpattern_name" "G_REGEX_ERROR_DUPLICATE_SUBPATTERN_NAME" "143")
    '("malformed_property" "G_REGEX_ERROR_MALFORMED_PROPERTY" "146")
    '("unknown_property" "G_REGEX_ERROR_UNKNOWN_PROPERTY" "147")
    '("subpattern_name_too_long" "G_REGEX_ERROR_SUBPATTERN_NAME_TOO_LONG" "148")
    '("too_many_subpatterns" "G_REGEX_ERROR_TOO_MANY_SUBPATTERNS" "149")
    '("invalid_octal_value" "G_REGEX_ERROR_INVALID_OCTAL_VALUE" "151")
    '("too_many_branches_in_define" "G_REGEX_ERROR_TOO_MANY_BRANCHES_IN_DEFINE" "154")
    '("define_repetion" "G_REGEX_ERROR_DEFINE_REPETION" "155")
    '("inconsistent_newline_options" "G_REGEX_ERROR_INCONSISTENT_NEWLINE_OPTIONS" "156")
    '("missing_back_reference" "G_REGEX_ERROR_MISSING_BACK_REFERENCE" "157")
    '("invalid_relative_reference" "G_REGEX_ERROR_INVALID_RELATIVE_REFERENCE" "158")
    '("backtracking_control_verb_argument_forbidden" "G_REGEX_ERROR_BACKTRACKING_CONTROL_VERB_ARGUMENT_FORBIDDEN" "159")
    '("unknown_backtracking_control_verb" "G_REGEX_ERROR_UNKNOWN_BACKTRACKING_CONTROL_VERB" "160")
    '("number_too_big" "G_REGEX_ERROR_NUMBER_TOO_BIG" "161")
    '("missing_subpattern_name" "G_REGEX_ERROR_MISSING_SUBPATTERN_NAME" "162")
    '("missing_digit" "G_REGEX_ERROR_MISSING_DIGIT" "163")
    '("invalid_data_character" "G_REGEX_ERROR_INVALID_DATA_CHARACTER" "164")
    '("extra_subpattern_name" "G_REGEX_ERROR_EXTRA_SUBPATTERN_NAME" "165")
    '("backtracking_control_verb_argument_required" "G_REGEX_ERROR_BACKTRACKING_CONTROL_VERB_ARGUMENT_REQUIRED" "166")
    '("invalid_control_char" "G_REGEX_ERROR_INVALID_CONTROL_CHAR" "168")
    '("missing_name" "G_REGEX_ERROR_MISSING_NAME" "169")
    '("not_supported_in_class" "G_REGEX_ERROR_NOT_SUPPORTED_IN_CLASS" "171")
    '("too_many_forward_references" "G_REGEX_ERROR_TOO_MANY_FORWARD_REFERENCES" "172")
    '("name_too_long" "G_REGEX_ERROR_NAME_TOO_LONG" "175")
    '("character_value_too_large" "G_REGEX_ERROR_CHARACTER_VALUE_TOO_LARGE" "176")
  )
)

(define-flags-extended RegexMatchFlags
  (in-module "GLib")
  (c-name "GRegexMatchFlags")
  (values
    '("anchored" "G_REGEX_MATCH_ANCHORED" "16")
    '("notbol" "G_REGEX_MATCH_NOTBOL" "128")
    '("noteol" "G_REGEX_MATCH_NOTEOL" "256")
    '("notempty" "G_REGEX_MATCH_NOTEMPTY" "1024")
    '("partial" "G_REGEX_MATCH_PARTIAL" "32768")
    '("newline_cr" "G_REGEX_MATCH_NEWLINE_CR" "1048576")
    '("newline_lf" "G_REGEX_MATCH_NEWLINE_LF" "2097152")
    '("newline_crlf" "G_REGEX_MATCH_NEWLINE_CRLF" "3145728")
    '("newline_any" "G_REGEX_MATCH_NEWLINE_ANY" "4194304")
    '("newline_anycrlf" "G_REGEX_MATCH_NEWLINE_ANYCRLF" "5242880")
    '("bsr_anycrlf" "G_REGEX_MATCH_BSR_ANYCRLF" "8388608")
    '("bsr_any" "G_REGEX_MATCH_BSR_ANY" "16777216")
    '("partial_soft" "G_REGEX_MATCH_PARTIAL_SOFT" "32768")
    '("partial_hard" "G_REGEX_MATCH_PARTIAL_HARD" "134217728")
    '("notempty_atstart" "G_REGEX_MATCH_NOTEMPTY_ATSTART" "268435456")
  )
)

(define-enum-extended SeekType
  (in-module "GLib")
  (c-name "GSeekType")
  (values
    '("cur" "G_SEEK_CUR" "0")
    '("set" "G_SEEK_SET" "1")
    '("end" "G_SEEK_END" "2")
  )
)

(define-enum-extended ShellError
  (in-module "GLib")
  (c-name "GShellError")
  (values
    '("bad_quoting" "G_SHELL_ERROR_BAD_QUOTING" "0")
    '("empty_string" "G_SHELL_ERROR_EMPTY_STRING" "1")
    '("failed" "G_SHELL_ERROR_FAILED" "2")
  )
)

(define-enum-extended SliceConfig
  (in-module "GLib")
  (c-name "GSliceConfig")
  (values
    '("always_malloc" "G_SLICE_CONFIG_ALWAYS_MALLOC" "1")
    '("bypass_magazines" "G_SLICE_CONFIG_BYPASS_MAGAZINES" "2")
    '("working_set_msecs" "G_SLICE_CONFIG_WORKING_SET_MSECS" "3")
    '("color_increment" "G_SLICE_CONFIG_COLOR_INCREMENT" "4")
    '("chunk_sizes" "G_SLICE_CONFIG_CHUNK_SIZES" "5")
    '("contention_counter" "G_SLICE_CONFIG_CONTENTION_COUNTER" "6")
  )
)

(define-enum-extended SpawnError
  (in-module "GLib")
  (c-name "GSpawnError")
  (values
    '("fork" "G_SPAWN_ERROR_FORK" "0")
    '("read" "G_SPAWN_ERROR_READ" "1")
    '("chdir" "G_SPAWN_ERROR_CHDIR" "2")
    '("acces" "G_SPAWN_ERROR_ACCES" "3")
    '("perm" "G_SPAWN_ERROR_PERM" "4")
    '("too_big" "G_SPAWN_ERROR_TOO_BIG" "5")
    '("2big" "G_SPAWN_ERROR_2BIG" "5")
    '("noexec" "G_SPAWN_ERROR_NOEXEC" "6")
    '("nametoolong" "G_SPAWN_ERROR_NAMETOOLONG" "7")
    '("noent" "G_SPAWN_ERROR_NOENT" "8")
    '("nomem" "G_SPAWN_ERROR_NOMEM" "9")
    '("notdir" "G_SPAWN_ERROR_NOTDIR" "10")
    '("loop" "G_SPAWN_ERROR_LOOP" "11")
    '("txtbusy" "G_SPAWN_ERROR_TXTBUSY" "12")
    '("io" "G_SPAWN_ERROR_IO" "13")
    '("nfile" "G_SPAWN_ERROR_NFILE" "14")
    '("mfile" "G_SPAWN_ERROR_MFILE" "15")
    '("inval" "G_SPAWN_ERROR_INVAL" "16")
    '("isdir" "G_SPAWN_ERROR_ISDIR" "17")
    '("libbad" "G_SPAWN_ERROR_LIBBAD" "18")
    '("failed" "G_SPAWN_ERROR_FAILED" "19")
  )
)

(define-flags-extended SpawnFlags
  (in-module "GLib")
  (c-name "GSpawnFlags")
  (values
    '("default" "G_SPAWN_DEFAULT" "0")
    '("leave_descriptors_open" "G_SPAWN_LEAVE_DESCRIPTORS_OPEN" "1")
    '("do_not_reap_child" "G_SPAWN_DO_NOT_REAP_CHILD" "2")
    '("search_path" "G_SPAWN_SEARCH_PATH" "4")
    '("stdout_to_dev_null" "G_SPAWN_STDOUT_TO_DEV_NULL" "8")
    '("stderr_to_dev_null" "G_SPAWN_STDERR_TO_DEV_NULL" "16")
    '("child_inherits_stdin" "G_SPAWN_CHILD_INHERITS_STDIN" "32")
    '("file_and_argv_zero" "G_SPAWN_FILE_AND_ARGV_ZERO" "64")
    '("search_path_from_envp" "G_SPAWN_SEARCH_PATH_FROM_ENVP" "128")
    '("cloexec_pipes" "G_SPAWN_CLOEXEC_PIPES" "256")
  )
)

(define-enum-extended TestFileType
  (in-module "GLib")
  (c-name "GTestFileType")
  (values
    '("dist" "G_TEST_DIST" "0")
    '("built" "G_TEST_BUILT" "1")
  )
)

(define-enum-extended TestLogType
  (in-module "GLib")
  (c-name "GTestLogType")
  (values
    '("none" "G_TEST_LOG_NONE" "0")
    '("error" "G_TEST_LOG_ERROR" "1")
    '("start_binary" "G_TEST_LOG_START_BINARY" "2")
    '("list_case" "G_TEST_LOG_LIST_CASE" "3")
    '("skip_case" "G_TEST_LOG_SKIP_CASE" "4")
    '("start_case" "G_TEST_LOG_START_CASE" "5")
    '("stop_case" "G_TEST_LOG_STOP_CASE" "6")
    '("min_result" "G_TEST_LOG_MIN_RESULT" "7")
    '("max_result" "G_TEST_LOG_MAX_RESULT" "8")
    '("message" "G_TEST_LOG_MESSAGE" "9")
    '("start_suite" "G_TEST_LOG_START_SUITE" "10")
    '("stop_suite" "G_TEST_LOG_STOP_SUITE" "11")
  )
)

(define-flags-extended TestSubprocessFlags
  (in-module "GLib")
  (c-name "GTestSubprocessFlags")
  (values
    '("stdin" "G_TEST_SUBPROCESS_INHERIT_STDIN" "1")
    '("stdout" "G_TEST_SUBPROCESS_INHERIT_STDOUT" "2")
    '("stderr" "G_TEST_SUBPROCESS_INHERIT_STDERR" "4")
  )
)

(define-flags-extended TestTrapFlags
  (in-module "GLib")
  (c-name "GTestTrapFlags")
  (values
    '("silence_stdout" "G_TEST_TRAP_SILENCE_STDOUT" "128")
    '("silence_stderr" "G_TEST_TRAP_SILENCE_STDERR" "256")
    '("inherit_stdin" "G_TEST_TRAP_INHERIT_STDIN" "512")
  )
)

(define-enum-extended ThreadError
  (in-module "GLib")
  (c-name "GThreadError")
  (values
    '("thread_error_again" "G_THREAD_ERROR_AGAIN" "0")
  )
)

(define-enum-extended TimeType
  (in-module "GLib")
  (c-name "GTimeType")
  (values
    '("standard" "G_TIME_TYPE_STANDARD" "0")
    '("daylight" "G_TIME_TYPE_DAYLIGHT" "1")
    '("universal" "G_TIME_TYPE_UNIVERSAL" "2")
  )
)

(define-enum-extended TokenType
  (in-module "GLib")
  (c-name "GTokenType")
  (values
    '("eof" "G_TOKEN_EOF" "0")
    '("left_paren" "G_TOKEN_LEFT_PAREN" "40")
    '("right_paren" "G_TOKEN_RIGHT_PAREN" "41")
    '("left_curly" "G_TOKEN_LEFT_CURLY" "123")
    '("right_curly" "G_TOKEN_RIGHT_CURLY" "125")
    '("left_brace" "G_TOKEN_LEFT_BRACE" "91")
    '("right_brace" "G_TOKEN_RIGHT_BRACE" "93")
    '("equal_sign" "G_TOKEN_EQUAL_SIGN" "61")
    '("comma" "G_TOKEN_COMMA" "44")
    '("none" "G_TOKEN_NONE" "256")
    '("error" "G_TOKEN_ERROR" "257")
    '("char" "G_TOKEN_CHAR" "258")
    '("binary" "G_TOKEN_BINARY" "259")
    '("octal" "G_TOKEN_OCTAL" "260")
    '("int" "G_TOKEN_INT" "261")
    '("hex" "G_TOKEN_HEX" "262")
    '("float" "G_TOKEN_FLOAT" "263")
    '("string" "G_TOKEN_STRING" "264")
    '("symbol" "G_TOKEN_SYMBOL" "265")
    '("identifier" "G_TOKEN_IDENTIFIER" "266")
    '("identifier_null" "G_TOKEN_IDENTIFIER_NULL" "267")
    '("comment_single" "G_TOKEN_COMMENT_SINGLE" "268")
    '("comment_multi" "G_TOKEN_COMMENT_MULTI" "269")
  )
)

(define-flags-extended TraverseFlags
  (in-module "GLib")
  (c-name "GTraverseFlags")
  (values
    '("leaves" "G_TRAVERSE_LEAVES" "1")
    '("non_leaves" "G_TRAVERSE_NON_LEAVES" "2")
    '("all" "G_TRAVERSE_ALL" "3")
    '("mask" "G_TRAVERSE_MASK" "3")
    '("leafs" "G_TRAVERSE_LEAFS" "1")
    '("non_leafs" "G_TRAVERSE_NON_LEAFS" "2")
  )
)

(define-enum-extended TraverseType
  (in-module "GLib")
  (c-name "GTraverseType")
  (values
    '("in_order" "G_IN_ORDER" "0")
    '("pre_order" "G_PRE_ORDER" "1")
    '("post_order" "G_POST_ORDER" "2")
    '("level_order" "G_LEVEL_ORDER" "3")
  )
)

(define-enum-extended UnicodeBreakType
  (in-module "GLib")
  (c-name "GUnicodeBreakType")
  (values
    '("mandatory" "G_UNICODE_BREAK_MANDATORY" "0")
    '("carriage_return" "G_UNICODE_BREAK_CARRIAGE_RETURN" "1")
    '("line_feed" "G_UNICODE_BREAK_LINE_FEED" "2")
    '("combining_mark" "G_UNICODE_BREAK_COMBINING_MARK" "3")
    '("surrogate" "G_UNICODE_BREAK_SURROGATE" "4")
    '("zero_width_space" "G_UNICODE_BREAK_ZERO_WIDTH_SPACE" "5")
    '("inseparable" "G_UNICODE_BREAK_INSEPARABLE" "6")
    '("non_breaking_glue" "G_UNICODE_BREAK_NON_BREAKING_GLUE" "7")
    '("contingent" "G_UNICODE_BREAK_CONTINGENT" "8")
    '("space" "G_UNICODE_BREAK_SPACE" "9")
    '("after" "G_UNICODE_BREAK_AFTER" "10")
    '("before" "G_UNICODE_BREAK_BEFORE" "11")
    '("before_and_after" "G_UNICODE_BREAK_BEFORE_AND_AFTER" "12")
    '("hyphen" "G_UNICODE_BREAK_HYPHEN" "13")
    '("non_starter" "G_UNICODE_BREAK_NON_STARTER" "14")
    '("open_punctuation" "G_UNICODE_BREAK_OPEN_PUNCTUATION" "15")
    '("close_punctuation" "G_UNICODE_BREAK_CLOSE_PUNCTUATION" "16")
    '("quotation" "G_UNICODE_BREAK_QUOTATION" "17")
    '("exclamation" "G_UNICODE_BREAK_EXCLAMATION" "18")
    '("ideographic" "G_UNICODE_BREAK_IDEOGRAPHIC" "19")
    '("numeric" "G_UNICODE_BREAK_NUMERIC" "20")
    '("infix_separator" "G_UNICODE_BREAK_INFIX_SEPARATOR" "21")
    '("symbol" "G_UNICODE_BREAK_SYMBOL" "22")
    '("alphabetic" "G_UNICODE_BREAK_ALPHABETIC" "23")
    '("prefix" "G_UNICODE_BREAK_PREFIX" "24")
    '("postfix" "G_UNICODE_BREAK_POSTFIX" "25")
    '("complex_context" "G_UNICODE_BREAK_COMPLEX_CONTEXT" "26")
    '("ambiguous" "G_UNICODE_BREAK_AMBIGUOUS" "27")
    '("unknown" "G_UNICODE_BREAK_UNKNOWN" "28")
    '("next_line" "G_UNICODE_BREAK_NEXT_LINE" "29")
    '("word_joiner" "G_UNICODE_BREAK_WORD_JOINER" "30")
    '("hangul_l_jamo" "G_UNICODE_BREAK_HANGUL_L_JAMO" "31")
    '("hangul_v_jamo" "G_UNICODE_BREAK_HANGUL_V_JAMO" "32")
    '("hangul_t_jamo" "G_UNICODE_BREAK_HANGUL_T_JAMO" "33")
    '("hangul_lv_syllable" "G_UNICODE_BREAK_HANGUL_LV_SYLLABLE" "34")
    '("hangul_lvt_syllable" "G_UNICODE_BREAK_HANGUL_LVT_SYLLABLE" "35")
    '("close_paranthesis" "G_UNICODE_BREAK_CLOSE_PARANTHESIS" "36")
    '("conditional_japanese_starter" "G_UNICODE_BREAK_CONDITIONAL_JAPANESE_STARTER" "37")
    '("hebrew_letter" "G_UNICODE_BREAK_HEBREW_LETTER" "38")
    '("regional_indicator" "G_UNICODE_BREAK_REGIONAL_INDICATOR" "39")
  )
)

(define-enum-extended UnicodeScript
  (in-module "GLib")
  (c-name "GUnicodeScript")
  (values
    '("invalid_code" "G_UNICODE_SCRIPT_INVALID_CODE" "-1")
    '("common" "G_UNICODE_SCRIPT_COMMON" "0")
    '("inherited" "G_UNICODE_SCRIPT_INHERITED" "1")
    '("arabic" "G_UNICODE_SCRIPT_ARABIC" "2")
    '("armenian" "G_UNICODE_SCRIPT_ARMENIAN" "3")
    '("bengali" "G_UNICODE_SCRIPT_BENGALI" "4")
    '("bopomofo" "G_UNICODE_SCRIPT_BOPOMOFO" "5")
    '("cherokee" "G_UNICODE_SCRIPT_CHEROKEE" "6")
    '("coptic" "G_UNICODE_SCRIPT_COPTIC" "7")
    '("cyrillic" "G_UNICODE_SCRIPT_CYRILLIC" "8")
    '("deseret" "G_UNICODE_SCRIPT_DESERET" "9")
    '("devanagari" "G_UNICODE_SCRIPT_DEVANAGARI" "10")
    '("ethiopic" "G_UNICODE_SCRIPT_ETHIOPIC" "11")
    '("georgian" "G_UNICODE_SCRIPT_GEORGIAN" "12")
    '("gothic" "G_UNICODE_SCRIPT_GOTHIC" "13")
    '("greek" "G_UNICODE_SCRIPT_GREEK" "14")
    '("gujarati" "G_UNICODE_SCRIPT_GUJARATI" "15")
    '("gurmukhi" "G_UNICODE_SCRIPT_GURMUKHI" "16")
    '("han" "G_UNICODE_SCRIPT_HAN" "17")
    '("hangul" "G_UNICODE_SCRIPT_HANGUL" "18")
    '("hebrew" "G_UNICODE_SCRIPT_HEBREW" "19")
    '("hiragana" "G_UNICODE_SCRIPT_HIRAGANA" "20")
    '("kannada" "G_UNICODE_SCRIPT_KANNADA" "21")
    '("katakana" "G_UNICODE_SCRIPT_KATAKANA" "22")
    '("khmer" "G_UNICODE_SCRIPT_KHMER" "23")
    '("lao" "G_UNICODE_SCRIPT_LAO" "24")
    '("latin" "G_UNICODE_SCRIPT_LATIN" "25")
    '("malayalam" "G_UNICODE_SCRIPT_MALAYALAM" "26")
    '("mongolian" "G_UNICODE_SCRIPT_MONGOLIAN" "27")
    '("myanmar" "G_UNICODE_SCRIPT_MYANMAR" "28")
    '("ogham" "G_UNICODE_SCRIPT_OGHAM" "29")
    '("old_italic" "G_UNICODE_SCRIPT_OLD_ITALIC" "30")
    '("oriya" "G_UNICODE_SCRIPT_ORIYA" "31")
    '("runic" "G_UNICODE_SCRIPT_RUNIC" "32")
    '("sinhala" "G_UNICODE_SCRIPT_SINHALA" "33")
    '("syriac" "G_UNICODE_SCRIPT_SYRIAC" "34")
    '("tamil" "G_UNICODE_SCRIPT_TAMIL" "35")
    '("telugu" "G_UNICODE_SCRIPT_TELUGU" "36")
    '("thaana" "G_UNICODE_SCRIPT_THAANA" "37")
    '("thai" "G_UNICODE_SCRIPT_THAI" "38")
    '("tibetan" "G_UNICODE_SCRIPT_TIBETAN" "39")
    '("canadian_aboriginal" "G_UNICODE_SCRIPT_CANADIAN_ABORIGINAL" "40")
    '("yi" "G_UNICODE_SCRIPT_YI" "41")
    '("tagalog" "G_UNICODE_SCRIPT_TAGALOG" "42")
    '("hanunoo" "G_UNICODE_SCRIPT_HANUNOO" "43")
    '("buhid" "G_UNICODE_SCRIPT_BUHID" "44")
    '("tagbanwa" "G_UNICODE_SCRIPT_TAGBANWA" "45")
    '("braille" "G_UNICODE_SCRIPT_BRAILLE" "46")
    '("cypriot" "G_UNICODE_SCRIPT_CYPRIOT" "47")
    '("limbu" "G_UNICODE_SCRIPT_LIMBU" "48")
    '("osmanya" "G_UNICODE_SCRIPT_OSMANYA" "49")
    '("shavian" "G_UNICODE_SCRIPT_SHAVIAN" "50")
    '("linear_b" "G_UNICODE_SCRIPT_LINEAR_B" "51")
    '("tai_le" "G_UNICODE_SCRIPT_TAI_LE" "52")
    '("ugaritic" "G_UNICODE_SCRIPT_UGARITIC" "53")
    '("new_tai_lue" "G_UNICODE_SCRIPT_NEW_TAI_LUE" "54")
    '("buginese" "G_UNICODE_SCRIPT_BUGINESE" "55")
    '("glagolitic" "G_UNICODE_SCRIPT_GLAGOLITIC" "56")
    '("tifinagh" "G_UNICODE_SCRIPT_TIFINAGH" "57")
    '("syloti_nagri" "G_UNICODE_SCRIPT_SYLOTI_NAGRI" "58")
    '("old_persian" "G_UNICODE_SCRIPT_OLD_PERSIAN" "59")
    '("kharoshthi" "G_UNICODE_SCRIPT_KHAROSHTHI" "60")
    '("unknown" "G_UNICODE_SCRIPT_UNKNOWN" "61")
    '("balinese" "G_UNICODE_SCRIPT_BALINESE" "62")
    '("cuneiform" "G_UNICODE_SCRIPT_CUNEIFORM" "63")
    '("phoenician" "G_UNICODE_SCRIPT_PHOENICIAN" "64")
    '("phags_pa" "G_UNICODE_SCRIPT_PHAGS_PA" "65")
    '("nko" "G_UNICODE_SCRIPT_NKO" "66")
    '("kayah_li" "G_UNICODE_SCRIPT_KAYAH_LI" "67")
    '("lepcha" "G_UNICODE_SCRIPT_LEPCHA" "68")
    '("rejang" "G_UNICODE_SCRIPT_REJANG" "69")
    '("sundanese" "G_UNICODE_SCRIPT_SUNDANESE" "70")
    '("saurashtra" "G_UNICODE_SCRIPT_SAURASHTRA" "71")
    '("cham" "G_UNICODE_SCRIPT_CHAM" "72")
    '("ol_chiki" "G_UNICODE_SCRIPT_OL_CHIKI" "73")
    '("vai" "G_UNICODE_SCRIPT_VAI" "74")
    '("carian" "G_UNICODE_SCRIPT_CARIAN" "75")
    '("lycian" "G_UNICODE_SCRIPT_LYCIAN" "76")
    '("lydian" "G_UNICODE_SCRIPT_LYDIAN" "77")
    '("avestan" "G_UNICODE_SCRIPT_AVESTAN" "78")
    '("bamum" "G_UNICODE_SCRIPT_BAMUM" "79")
    '("egyptian_hieroglyphs" "G_UNICODE_SCRIPT_EGYPTIAN_HIEROGLYPHS" "80")
    '("imperial_aramaic" "G_UNICODE_SCRIPT_IMPERIAL_ARAMAIC" "81")
    '("inscriptional_pahlavi" "G_UNICODE_SCRIPT_INSCRIPTIONAL_PAHLAVI" "82")
    '("inscriptional_parthian" "G_UNICODE_SCRIPT_INSCRIPTIONAL_PARTHIAN" "83")
    '("javanese" "G_UNICODE_SCRIPT_JAVANESE" "84")
    '("kaithi" "G_UNICODE_SCRIPT_KAITHI" "85")
    '("lisu" "G_UNICODE_SCRIPT_LISU" "86")
    '("meetei_mayek" "G_UNICODE_SCRIPT_MEETEI_MAYEK" "87")
    '("old_south_arabian" "G_UNICODE_SCRIPT_OLD_SOUTH_ARABIAN" "88")
    '("old_turkic" "G_UNICODE_SCRIPT_OLD_TURKIC" "89")
    '("samaritan" "G_UNICODE_SCRIPT_SAMARITAN" "90")
    '("tai_tham" "G_UNICODE_SCRIPT_TAI_THAM" "91")
    '("tai_viet" "G_UNICODE_SCRIPT_TAI_VIET" "92")
    '("batak" "G_UNICODE_SCRIPT_BATAK" "93")
    '("brahmi" "G_UNICODE_SCRIPT_BRAHMI" "94")
    '("mandaic" "G_UNICODE_SCRIPT_MANDAIC" "95")
    '("chakma" "G_UNICODE_SCRIPT_CHAKMA" "96")
    '("meroitic_cursive" "G_UNICODE_SCRIPT_MEROITIC_CURSIVE" "97")
    '("meroitic_hieroglyphs" "G_UNICODE_SCRIPT_MEROITIC_HIEROGLYPHS" "98")
    '("miao" "G_UNICODE_SCRIPT_MIAO" "99")
    '("sharada" "G_UNICODE_SCRIPT_SHARADA" "100")
    '("sora_sompeng" "G_UNICODE_SCRIPT_SORA_SOMPENG" "101")
    '("takri" "G_UNICODE_SCRIPT_TAKRI" "102")
    '("bassa_vah" "G_UNICODE_SCRIPT_BASSA_VAH" "103")
    '("caucasian_albanian" "G_UNICODE_SCRIPT_CAUCASIAN_ALBANIAN" "104")
    '("duployan" "G_UNICODE_SCRIPT_DUPLOYAN" "105")
    '("elbasan" "G_UNICODE_SCRIPT_ELBASAN" "106")
    '("grantha" "G_UNICODE_SCRIPT_GRANTHA" "107")
    '("khojki" "G_UNICODE_SCRIPT_KHOJKI" "108")
    '("khudawadi" "G_UNICODE_SCRIPT_KHUDAWADI" "109")
    '("linear_a" "G_UNICODE_SCRIPT_LINEAR_A" "110")
    '("mahajani" "G_UNICODE_SCRIPT_MAHAJANI" "111")
    '("manichaean" "G_UNICODE_SCRIPT_MANICHAEAN" "112")
    '("mende_kikakui" "G_UNICODE_SCRIPT_MENDE_KIKAKUI" "113")
    '("modi" "G_UNICODE_SCRIPT_MODI" "114")
    '("mro" "G_UNICODE_SCRIPT_MRO" "115")
    '("nabataean" "G_UNICODE_SCRIPT_NABATAEAN" "116")
    '("old_north_arabian" "G_UNICODE_SCRIPT_OLD_NORTH_ARABIAN" "117")
    '("old_permic" "G_UNICODE_SCRIPT_OLD_PERMIC" "118")
    '("pahawh_hmong" "G_UNICODE_SCRIPT_PAHAWH_HMONG" "119")
    '("palmyrene" "G_UNICODE_SCRIPT_PALMYRENE" "120")
    '("pau_cin_hau" "G_UNICODE_SCRIPT_PAU_CIN_HAU" "121")
    '("psalter_pahlavi" "G_UNICODE_SCRIPT_PSALTER_PAHLAVI" "122")
    '("siddham" "G_UNICODE_SCRIPT_SIDDHAM" "123")
    '("tirhuta" "G_UNICODE_SCRIPT_TIRHUTA" "124")
    '("warang_citi" "G_UNICODE_SCRIPT_WARANG_CITI" "125")
    '("ahom" "G_UNICODE_SCRIPT_AHOM" "126")
    '("anatolian_hieroglyphs" "G_UNICODE_SCRIPT_ANATOLIAN_HIEROGLYPHS" "127")
    '("hatran" "G_UNICODE_SCRIPT_HATRAN" "128")
    '("multani" "G_UNICODE_SCRIPT_MULTANI" "129")
    '("old_hungarian" "G_UNICODE_SCRIPT_OLD_HUNGARIAN" "130")
    '("signwriting" "G_UNICODE_SCRIPT_SIGNWRITING" "131")
  )
)

(define-enum-extended UnicodeType
  (in-module "GLib")
  (c-name "GUnicodeType")
  (values
    '("control" "G_UNICODE_CONTROL" "0")
    '("format" "G_UNICODE_FORMAT" "1")
    '("unassigned" "G_UNICODE_UNASSIGNED" "2")
    '("private_use" "G_UNICODE_PRIVATE_USE" "3")
    '("surrogate" "G_UNICODE_SURROGATE" "4")
    '("lowercase_letter" "G_UNICODE_LOWERCASE_LETTER" "5")
    '("modifier_letter" "G_UNICODE_MODIFIER_LETTER" "6")
    '("other_letter" "G_UNICODE_OTHER_LETTER" "7")
    '("titlecase_letter" "G_UNICODE_TITLECASE_LETTER" "8")
    '("uppercase_letter" "G_UNICODE_UPPERCASE_LETTER" "9")
    '("spacing_mark" "G_UNICODE_SPACING_MARK" "10")
    '("enclosing_mark" "G_UNICODE_ENCLOSING_MARK" "11")
    '("non_spacing_mark" "G_UNICODE_NON_SPACING_MARK" "12")
    '("decimal_number" "G_UNICODE_DECIMAL_NUMBER" "13")
    '("letter_number" "G_UNICODE_LETTER_NUMBER" "14")
    '("other_number" "G_UNICODE_OTHER_NUMBER" "15")
    '("connect_punctuation" "G_UNICODE_CONNECT_PUNCTUATION" "16")
    '("dash_punctuation" "G_UNICODE_DASH_PUNCTUATION" "17")
    '("close_punctuation" "G_UNICODE_CLOSE_PUNCTUATION" "18")
    '("final_punctuation" "G_UNICODE_FINAL_PUNCTUATION" "19")
    '("initial_punctuation" "G_UNICODE_INITIAL_PUNCTUATION" "20")
    '("other_punctuation" "G_UNICODE_OTHER_PUNCTUATION" "21")
    '("open_punctuation" "G_UNICODE_OPEN_PUNCTUATION" "22")
    '("currency_symbol" "G_UNICODE_CURRENCY_SYMBOL" "23")
    '("modifier_symbol" "G_UNICODE_MODIFIER_SYMBOL" "24")
    '("math_symbol" "G_UNICODE_MATH_SYMBOL" "25")
    '("other_symbol" "G_UNICODE_OTHER_SYMBOL" "26")
    '("line_separator" "G_UNICODE_LINE_SEPARATOR" "27")
    '("paragraph_separator" "G_UNICODE_PARAGRAPH_SEPARATOR" "28")
    '("space_separator" "G_UNICODE_SPACE_SEPARATOR" "29")
  )
)

(define-enum-extended UserDirectory
  (in-module "GLib")
  (c-name "GUserDirectory")
  (values
    '("directory_desktop" "G_USER_DIRECTORY_DESKTOP" "0")
    '("directory_documents" "G_USER_DIRECTORY_DOCUMENTS" "1")
    '("directory_download" "G_USER_DIRECTORY_DOWNLOAD" "2")
    '("directory_music" "G_USER_DIRECTORY_MUSIC" "3")
    '("directory_pictures" "G_USER_DIRECTORY_PICTURES" "4")
    '("directory_public_share" "G_USER_DIRECTORY_PUBLIC_SHARE" "5")
    '("directory_templates" "G_USER_DIRECTORY_TEMPLATES" "6")
    '("directory_videos" "G_USER_DIRECTORY_VIDEOS" "7")
    '("n_directories" "G_USER_N_DIRECTORIES" "8")
  )
)

(define-enum-extended VariantClass
  (in-module "GLib")
  (c-name "GVariantClass")
  (values
    '("boolean" "G_VARIANT_CLASS_BOOLEAN" "98")
    '("byte" "G_VARIANT_CLASS_BYTE" "121")
    '("int16" "G_VARIANT_CLASS_INT16" "110")
    '("uint16" "G_VARIANT_CLASS_UINT16" "113")
    '("int32" "G_VARIANT_CLASS_INT32" "105")
    '("uint32" "G_VARIANT_CLASS_UINT32" "117")
    '("int64" "G_VARIANT_CLASS_INT64" "120")
    '("uint64" "G_VARIANT_CLASS_UINT64" "116")
    '("handle" "G_VARIANT_CLASS_HANDLE" "104")
    '("double" "G_VARIANT_CLASS_DOUBLE" "100")
    '("string" "G_VARIANT_CLASS_STRING" "115")
    '("object_path" "G_VARIANT_CLASS_OBJECT_PATH" "111")
    '("signature" "G_VARIANT_CLASS_SIGNATURE" "103")
    '("variant" "G_VARIANT_CLASS_VARIANT" "118")
    '("maybe" "G_VARIANT_CLASS_MAYBE" "109")
    '("array" "G_VARIANT_CLASS_ARRAY" "97")
    '("tuple" "G_VARIANT_CLASS_TUPLE" "40")
    '("dict_entry" "G_VARIANT_CLASS_DICT_ENTRY" "123")
  )
)

(define-enum-extended VariantParseError
  (in-module "GLib")
  (c-name "GVariantParseError")
  (values
    '("failed" "G_VARIANT_PARSE_ERROR_FAILED" "0")
    '("basic_type_expected" "G_VARIANT_PARSE_ERROR_BASIC_TYPE_EXPECTED" "1")
    '("cannot_infer_type" "G_VARIANT_PARSE_ERROR_CANNOT_INFER_TYPE" "2")
    '("definite_type_expected" "G_VARIANT_PARSE_ERROR_DEFINITE_TYPE_EXPECTED" "3")
    '("input_not_at_end" "G_VARIANT_PARSE_ERROR_INPUT_NOT_AT_END" "4")
    '("invalid_character" "G_VARIANT_PARSE_ERROR_INVALID_CHARACTER" "5")
    '("invalid_format_string" "G_VARIANT_PARSE_ERROR_INVALID_FORMAT_STRING" "6")
    '("invalid_object_path" "G_VARIANT_PARSE_ERROR_INVALID_OBJECT_PATH" "7")
    '("invalid_signature" "G_VARIANT_PARSE_ERROR_INVALID_SIGNATURE" "8")
    '("invalid_type_string" "G_VARIANT_PARSE_ERROR_INVALID_TYPE_STRING" "9")
    '("no_common_type" "G_VARIANT_PARSE_ERROR_NO_COMMON_TYPE" "10")
    '("number_out_of_range" "G_VARIANT_PARSE_ERROR_NUMBER_OUT_OF_RANGE" "11")
    '("number_too_big" "G_VARIANT_PARSE_ERROR_NUMBER_TOO_BIG" "12")
    '("type_error" "G_VARIANT_PARSE_ERROR_TYPE_ERROR" "13")
    '("unexpected_token" "G_VARIANT_PARSE_ERROR_UNEXPECTED_TOKEN" "14")
    '("unknown_keyword" "G_VARIANT_PARSE_ERROR_UNKNOWN_KEYWORD" "15")
    '("unterminated_string_constant" "G_VARIANT_PARSE_ERROR_UNTERMINATED_STRING_CONSTANT" "16")
    '("value_expected" "G_VARIANT_PARSE_ERROR_VALUE_EXPECTED" "17")
  )
)

(define-flags-extended ModuleFlags
  (in-module "GLib")
  (c-name "GModuleFlags")
  (values
    '("lazy" "G_MODULE_BIND_LAZY" "1")
    '("local" "G_MODULE_BIND_LOCAL" "2")
    '("mask" "G_MODULE_BIND_MASK" "3")
  )
)

(define-flags-extended BindingFlags
  (in-module "GLib")
  (c-name "GBindingFlags")
  (values
    '("default" "G_BINDING_DEFAULT" "0")
    '("bidirectional" "G_BINDING_BIDIRECTIONAL" "1")
    '("sync_create" "G_BINDING_SYNC_CREATE" "2")
    '("invert_boolean" "G_BINDING_INVERT_BOOLEAN" "4")
  )
)

(define-flags-extended ConnectFlags
  (in-module "GLib")
  (c-name "GConnectFlags")
  (values
    '("after" "G_CONNECT_AFTER" "1")
    '("swapped" "G_CONNECT_SWAPPED" "2")
  )
)

(define-flags-extended ParamFlags
  (in-module "GLib")
  (c-name "GParamFlags")
  (values
    '("readable" "G_PARAM_READABLE" "1")
    '("writable" "G_PARAM_WRITABLE" "2")
    '("readwrite" "G_PARAM_READWRITE" "3")
    '("construct" "G_PARAM_CONSTRUCT" "4")
    '("construct_only" "G_PARAM_CONSTRUCT_ONLY" "8")
    '("lax_validation" "G_PARAM_LAX_VALIDATION" "16")
    '("static_name" "G_PARAM_STATIC_NAME" "32")
    '("private" "G_PARAM_PRIVATE" "32")
    '("static_nick" "G_PARAM_STATIC_NICK" "64")
    '("static_blurb" "G_PARAM_STATIC_BLURB" "128")
    '("explicit_notify" "G_PARAM_EXPLICIT_NOTIFY" "1073741824")
    '("deprecated" "G_PARAM_DEPRECATED" "2147483648")
  )
)

(define-flags-extended SignalFlags
  (in-module "GLib")
  (c-name "GSignalFlags")
  (values
    '("run_first" "G_SIGNAL_RUN_FIRST" "1")
    '("run_last" "G_SIGNAL_RUN_LAST" "2")
    '("run_cleanup" "G_SIGNAL_RUN_CLEANUP" "4")
    '("no_recurse" "G_SIGNAL_NO_RECURSE" "8")
    '("detailed" "G_SIGNAL_DETAILED" "16")
    '("action" "G_SIGNAL_ACTION" "32")
    '("no_hooks" "G_SIGNAL_NO_HOOKS" "64")
    '("must_collect" "G_SIGNAL_MUST_COLLECT" "128")
    '("deprecated" "G_SIGNAL_DEPRECATED" "256")
  )
)

(define-flags-extended SignalMatchType
  (in-module "GLib")
  (c-name "GSignalMatchType")
  (values
    '("id" "G_SIGNAL_MATCH_ID" "1")
    '("detail" "G_SIGNAL_MATCH_DETAIL" "2")
    '("closure" "G_SIGNAL_MATCH_CLOSURE" "4")
    '("func" "G_SIGNAL_MATCH_FUNC" "8")
    '("data" "G_SIGNAL_MATCH_DATA" "16")
    '("unblocked" "G_SIGNAL_MATCH_UNBLOCKED" "32")
  )
)

(define-flags-extended TypeDebugFlags
  (in-module "GLib")
  (c-name "GTypeDebugFlags")
  (values
    '("none" "G_TYPE_DEBUG_NONE" "0")
    '("objects" "G_TYPE_DEBUG_OBJECTS" "1")
    '("signals" "G_TYPE_DEBUG_SIGNALS" "2")
    '("instance_count" "G_TYPE_DEBUG_INSTANCE_COUNT" "4")
    '("mask" "G_TYPE_DEBUG_MASK" "7")
  )
)

(define-flags-extended TypeFlags
  (in-module "GLib")
  (c-name "GTypeFlags")
  (values
    '("abstract" "G_TYPE_FLAG_ABSTRACT" "16")
    '("value_abstract" "G_TYPE_FLAG_VALUE_ABSTRACT" "32")
  )
)

(define-flags-extended TypeFundamentalFlags
  (in-module "GLib")
  (c-name "GTypeFundamentalFlags")
  (values
    '("classed" "G_TYPE_FLAG_CLASSED" "1")
    '("instantiatable" "G_TYPE_FLAG_INSTANTIATABLE" "2")
    '("derivable" "G_TYPE_FLAG_DERIVABLE" "4")
    '("deep_derivable" "G_TYPE_FLAG_DEEP_DERIVABLE" "8")
  )
)

(define-enum-extended ThreadPriority
  (in-module "G")
  (c-name "GThreadPriority")
  (values
    '("low" "G_THREAD_PRIORITY_LOW" "0")
    '("normal" "G_THREAD_PRIORITY_NORMAL" "1")
    '("high" "G_THREAD_PRIORITY_HIGH" "2")
    '("urgent" "G_THREAD_PRIORITY_URGENT" "3")
  )
)

