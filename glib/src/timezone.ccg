/* Copyright (C) 2011 The glibmm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <glibmm/utility.h>

namespace Glib
{

// We must hand-code create(const Glib::ustring& identifier).
// g_time_zone_new() is deprecated in glib 2.68.
// We can't use the replacement g_time_zone_new_identifier(),
// which is new in glib 2.68. This version of glibmm does not require glib 2.68.
G_GNUC_BEGIN_IGNORE_DEPRECATIONS
TimeZone TimeZone::create(const Glib::ustring& identifier)
{
  return Glib::wrap(g_time_zone_new(identifier.c_str()));
}
G_GNUC_END_IGNORE_DEPRECATIONS

// Glib::Value<Glib::TimeZone>
GType Value<TimeZone>::value_type()
{
  return G_TYPE_TIME_ZONE;
}

void Value<TimeZone>::set(const CppType& data)
{
  set_boxed(data.gobj());
}

Value<TimeZone>::CppType Value<TimeZone>::get() const
{
  return Glib::wrap(static_cast<CType>(get_boxed()), true);
}

} // namespace Glib
